{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit\cs_lassologit_all.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 Apr 2019, 18:33:52
{txt}
{com}. 
. which lassologit
{txt}.\lassologit.ado
{res}*! lassologit (v0.1)
*! last edited: 12apr2019
*! authors: aa/ms
{txt}
{com}. which lassologit_p
{txt}.\lassologit_p.ado
{res}*! lassologit_p
{txt}
{com}. which cvlassologit
{txt}.\cvlassologit.ado
{res}*! cvlassologit 
*! part of the lassologit package (v0.1)
*! last edited: 15apr2019
*! authors: aa/ms
{txt}
{com}. which rlassologit
{txt}.\rlassologit.ado
{res}*! rlassologit 
*! part of the lassologit package (v0.1)
*! last edited: 12apr2019
*! authors: aa/ms
{txt}
{com}. 
. do "cs_lassologit.do"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ********************************************************************************
. *** Prostate data                                                            ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************
.  
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, lam(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   3{col 31}   4.61264{col 43}   97.36078{txt} {res}{col 56} 0.2488{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}  10.56586{col 43}   90.27006{txt} {res}{col 56} 0.3403{txt}{col 65}{c |}{res}{col 67}Added lbph svi.
     4{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}  18.32126{col 43}   86.17998{txt} {res}{col 56} 0.4238{txt}{col 65}{c |}{res}{col 67}Added age lcp pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S =  e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[9,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .50144272   .60356877   .65136862    .8262603
{txt}lweight {res}          0           0   .46623224   1.0222793   1.1985052   1.4897915
{txt}    age {res}          0           0           0           0           0  -.02639874
{txt}   lbph {res}          0           0           0   .02322241    .0977888   .23427909
{txt}    svi {res}          0           0           0   .34760389   .81834702   2.1914669
{txt}    lcp {res}          0           0           0           0           0  -.20264117
{txt}gleason {res}          0           0   .27433896   .63999954   .80482493   1.2161025
{txt}  pgg45 {res}          0           0           0           0           0  -.00227197
{txt}  _cons {res}  .75566754   .75566754  -3.3706217  -7.9291814  -9.7345202  -12.132043
{reset}
{com}. mat G = ( 0,0,0.501461115822691,0.603583899226737,0.651411524139352,0.826374502058559 \ 0,0,0.466224946596217,1.02233825499837,1.19858862440819,1.48996763937638 \ 0,0,0,0,0,-0.0264071147625507 \ 0,0,0,0.0232111786772005,0.0977733878125449,0.234278942429968 \ 0,0,0,0.347557333713614,0.818269071194786,2.19023312954913 \ 0,0,0,0,0,-0.20284502575343 \ 0,0,0.274327168187838,0.639999602733867,0.804810602155823,1.21666269887086 \ 0,0,0,0,0,-0.00227895781755522 \ 0.755667537541278,0.755667537541278,-3.37053747374121,-7.92940124760532,-9.73475850480416,-12.1358873874818 )
{txt}
{com}. di mreldif(S,G)
{res}.00038672
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, nostd l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   1{col 31}   0.29844{col 43}  112.28197{txt} {res}{col 56} 0.0929{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   4{col 31}   1.21117{col 43}  101.42219{txt} {res}{col 56} 0.2320{txt}{col 65}{c |}{res}{col 67}Added lcavol age lbph.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   3{col 31}   1.51415{col 43}   93.41464{txt} {res}{col 56} 0.2813{txt}{col 65}{c |}{res}{col 67}Removed age.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   5.20432{col 43}   94.24763{txt} {res}{col 56} 0.3242{txt}{col 65}{c |}{res}{col 67}Added lweight age gleason.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}  15.75758{col 43}   87.63211{txt} {res}{col 56} 0.4118{txt}{col 65}{c |}{res}{col 67}Added svi lcp.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[9,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .48999457    .7693653   .85524862   .90587387
{txt}lweight {res}          0           0           0           0   .31595678   1.2171285
{txt}    age {res}          0           0   .00567835           0  -.00508425  -.03184618
{txt}   lbph {res}          0           0   .06331262   .20851714    .2390665   .28322545
{txt}    svi {res}          0           0           0           0           0   1.1479567
{txt}    lcp {res}          0           0           0           0           0  -.14337938
{txt}gleason {res}          0           0           0           0   .32609954    1.221161
{txt}  pgg45 {res}          0   .02309655   .02194763   .01826891   .01115514  -.00506532
{txt}  _cons {res}  .75566754   .27534735  -.63023247  -.51799615  -3.4517119  -10.801948
{reset}
{com}. mat G = ( 0,0,0.49000229764977,0.769318675648317,0.85526320111666,0.906069187273262 \ 0,0,0,0,0.315948623488018,1.21721663534913 \ 0,0,0.00568091171074165,0,-0.00508198583263728,-0.0318566587040123 \ 0,0,0.0633097982098456,0.208509405869272,0.239053556251706,0.283238055284736 \ 0,0,0,0,0,1.14829028427382 \ 0,0,0,0,0,-0.143667092495639 \ 0,0,0,0,0.325877300407054,1.22138220662723 \ 0,0.0230961215196978,0.0219472306702984,0.0182648564510364,0.0111575320234226,-0.00506567179207975 \ 0.755667537541278,0.27535477007396,-0.630396562134161,-0.517881010344681,-3.45041705660254,-10.8034348672065 )
{txt}
{com}. di mreldif(S,G)
{res}.00029096
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, nocons l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   1{col 31}   0.05598{col 43}  124.89448{txt} {res}{col 56}-0.0138{txt}{col 65}{c |}{res}{col 67}Added gleason.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   2{col 31}   0.61149{col 43}  101.12678{txt} {res}{col 56} 0.1954{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight. Removed gleason.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.05000{col 25}   5{col 31}   1.57115{col 43}   96.27282{txt} {res}{col 56} 0.2764{txt}{col 65}{c |}{res}{col 67}Added age lbph svi pgg45. Removed lweight.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   2.41099{col 43}   92.88880{txt} {res}{col 56} 0.3179{txt}{col 65}{c |}{res}{col 67}Added lweight.
     5{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}   4.49415{col 43}   90.64406{txt} {res}{col 56} 0.3638{txt}{col 65}{c |}{res}{col 67}Added lcp gleason.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[8,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .59802782   .72616476   .79875667   .92255846
{txt}lweight {res}          0           0   .01346455           0   .18176699   .48238405
{txt}    age {res}          0           0           0  -.00300917  -.01637452  -.06134834
{txt}   lbph {res}          0           0           0   .17547015   .25947085   .40786672
{txt}    svi {res}          0           0           0    .6652651   1.1500101   2.3420168
{txt}    lcp {res}          0           0           0           0           0  -.03583815
{txt}gleason {res}          0   .05597523           0           0           0   .23659329
{txt}  pgg45 {res}          0           0           0   .00123892   .00461519   .00554119
{reset}
{com}. mat G = ( 0,0,0.597904154552661,0.726122023990401,0.798790726486026,0.921752657257945 \ 0,0,0.0135028969542606,0,0.171947048951238,0.49056370807684 \ 0,0,0,-0.00300756283054592,-0.0158227880543364,-0.060846846460528 \ 0,0,0,0.175476249674279,0.259990447474341,0.405507212738994 \ 0,0,0,0.665451061416816,1.15151187861837,2.33678717583705 \ 0,0,0,0,0,-0.0347040277832361 \ 0,0.0559752315024908,0,0,5.66530864443488e-05,0.227283007307124 \ 0,0,0,0.00123728745272919,0.00458124613535244,0.0056859742231097 )
{txt}
{com}. di mreldif(S,G)
{res}.00837916
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit ybin lcavol-pgg45,  nostd nocons l(10 1 0.1 0.05 0.03 0.01) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   1{col 31}   0.00208{col 43}  131.65873{txt} {res}{col 56}-0.0695{txt}{col 65}{c |}{res}{col 67}Added age.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.00000{col 25}   2{col 31}   0.02767{col 43}  113.17565{txt} {res}{col 56} 0.0963{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.10000{col 25}   4{col 31}   0.58558{col 43}  100.15828{txt} {res}{col 56} 0.2308{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.03000{col 25}   6{col 31}   1.29587{col 43}   95.27151{txt} {res}{col 56} 0.2983{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     5{txt}{col 7}{c |}{res}   6{col 13}   0.01000{col 25}   8{col 31}   3.41425{col 43}   91.81365{txt} {res}{col 56} 0.3541{txt}{col 65}{c |}{res}{col 67}Added svi lcp.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[8,6]
                 r1          r2          r3          r4          r5          r6
 lcavol {res}          0           0   .48036643   .76668272    .9011587   .99537589
{txt}lweight {res}          0           0           0           0     .074323   .46323122
{txt}    age {res}  .00208321   .00314937  -.00374366  -.00798619  -.01462656  -.06097121
{txt}   lbph {res}          0           0    .0794793   .22121772   .28416574   .40829837
{txt}    svi {res}          0           0           0           0           0    1.184281
{txt}    lcp {res}          0           0           0           0           0  -.07020165
{txt}gleason {res}          0           0           0           0    .0042549   .22032571
{txt}  pgg45 {res}          0   .02451818   .02198798   .01847529   .01734401   .01156431
{reset}
{com}. mat G = ( 0,0,0.480318888302968,0.766488329771494,0.901293514420413,0.994357503579643 \ 0,0,0,0,0.0675008486192263,0.471956582881281 \ 0.00208320818573869,0.00315326759834838,-0.00374253486037605,-0.00798207623817391,-0.013826952207498,-0.0604790391537946 \ 0,0,0.0794801700546684,0.221208787323384,0.283793361154338,0.405919890396927 \ 0,0,0,0,0,1.17906428190479 \ 0,0,0,0,0,-0.0688739335594197 \ 0,0,0,0,0.000169219253455043,0.210870371872184 \ 0,0.0245128044360127,0.0219880300010344,0.018475718697768,0.0173742626600768,0.0117069696335417 )
{txt}
{com}. di mreldif(S,G)
{res}.00780871
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. // penalization and standardization
. lassologit ybin lcavol-pgg45, l(10)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bdense=e(beta_dense)
{txt}
{com}. mat psi=e(Psi)
{txt}
{com}. mat spsi=e(sPsi)
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) stdfly
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943480      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337418      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539189      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1105448    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) psi(psi)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) spsi(spsi)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4943305      0.9095492
{txt}{space 10}lweight {c |}{col 21}{res}      0.4337542      2.0564072
{txt}{space 10}gleason {c |}{col 21}{res}      0.2539834      1.3449179
{txt}{space 12}_cons {c |}{col 21}{res}     -3.1109989    -16.4802012
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. // vs notpen
. mat psi0=psi
{txt}
{com}. mat psi0[1,1]=0
{txt}
{com}. mat spsi0=spsi
{txt}
{com}. mat spsi0[1,1]=0
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) notpen(lcavol)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543043      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677157      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951812     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. mat bdense=e(beta_dense)
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) psi(psi0)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543043      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677157      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951812     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. lassologit ybin lcavol-pgg45, l(10) spsi(spsi0)
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      1.2543043      1.1966898
{txt}{space 10}lweight {c |}{col 21}{res}      0.0677157      1.7891419
{txt}{space 12}_cons {c |}{col 21}{res}     -0.8951812     -6.9732078
{txt}{hline 18}{c BT}{hline 32}

{com}. assert mreldif(bdense,e(beta_dense))<0.001
{txt}
{com}. 
. 
. 
. ********************************************************************************
. *** Spam data                                                                ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************
.  
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. lassologit v58 v1-v57 , ///
>         l(0.18 .1 .05 .01 0.005 0.001) lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18000{col 25}   1{col 31}   0.47598{col 43} 6122.83847{txt} {res}{col 56} 0.0083{txt}{col 65}{c |}{res}{col 67}Added v21 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   7{col 31}   2.81070{col 43} 5083.09675{txt} {res}{col 56} 0.1804{txt}{col 65}{c |}{res}{col 67}Added v7 v16 v23 v25 v53 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}  19{col 31}   6.90816{col 43} 3913.66594{txt} {res}{col 56} 0.3772{txt}{col 65}{c |}{res}{col 67}Added v5 v6 v8 v9 v17 v18 v19 v20 v24 v26 v27 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.01000{col 25}  37{col 31}  17.62002{col 43} 2616.28668{txt} {res}{col 56} 0.5984{txt}{col 65}{c |}{res}{col 67}Added v2 v3 v4 v10 v12 v22 v33 v37 v39 v42 v43 v44 v45 v46 v47 v48 v49 v56.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.00500{col 25}  45{col 31}  23.77112{col 43} 2369.70055{txt} {res}{col 56} 0.6433{txt}{col 65}{c |}{res}{col 67}Added v1 v14 v15 v29 v35 v38 v41 v51.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00100{col 25}  53{col 31}  42.66342{col 43} 2121.90778{txt} {res}{col 56} 0.6883{txt}{col 65}{c |}{res}{col 67}Added v11 v28 v30 v31 v36 v40 v50 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[58,6]
               r1          r2          r3          r4          r5          r6
   v1 {res}          0           0           0           0  -.04225664  -.27214275
{txt}   v2 {res}          0           0           0  -.00374091  -.05127575  -.12567998
{txt}   v3 {res}          0           0           0   .10113755   .11881682    .1390962
{txt}   v4 {res}          0           0           0   .01737589   .05267573   .19596475
{txt}   v5 {res}          0           0    .1727807   .42960602   .48472386   .52680103
{txt}   v6 {res}          0           0   .21529305   .43995289    .4920479    .6398607
{txt}   v7 {res}          0   .54124424   1.1426365   2.0688244    2.229753   2.2994845
{txt}   v8 {res}          0           0   .13686861   .48085682   .53116372   .55860011
{txt}   v9 {res}          0           0   .11944365   .36017472    .4285708   .57228097
{txt}  v10 {res}          0           0           0   .03639786   .06618343   .09890413
{txt}  v11 {res}          0           0           0           0           0  -.08911314
{txt}  v12 {res}          0           0           0  -.03081446  -.08906859   -.1347646
{txt}  v13 {res}          0           0           0           0           0           0
{txt}  v14 {res}          0           0           0           0   .00804803   .09629843
{txt}  v15 {res}          0           0           0           0    .1881181   .76789388
{txt}  v16 {res}          0   .05695022   .26102054   .47444417   .58307517   .99205468
{txt}  v17 {res}          0           0    .1633635   .53762305   .66652873   .84922582
{txt}  v18 {res}          0           0   .01860956   .22357567   .23252779   .15251566
{txt}  v19 {res}          0           0   .03546808   .06846787   .07442523    .0809274
{txt}  v20 {res}          0           0   .06231727   .30238904   .40107559   .68173141
{txt}  v21 {res}  .02516619   .24481679   .28506916   .23123314   .21751699     .226894
{txt}  v22 {res}          0           0           0   .15242899   .21254888   .24812337
{txt}  v23 {res}          0   .51267335   .90878927   1.6218806   1.8809046   2.2554731
{txt}  v24 {res}          0           0   .13648679   .50236483    .5536729   .54017396
{txt}  v25 {res}          0  -.00711341  -.11940898   -.6504895  -.94776068  -1.5416988
{txt}  v26 {res}          0           0  -.03652637  -.31180458  -.47637893  -.86518479
{txt}  v27 {res}          0           0  -.00214557  -.15015757  -.46485457  -1.4429289
{txt}  v28 {res}          0           0           0           0           0   .29930437
{txt}  v29 {res}          0           0           0           0  -.11315754  -.97465088
{txt}  v30 {res}          0           0           0           0           0  -.21465474
{txt}  v31 {res}          0           0           0           0           0  -.15177803
{txt}  v32 {res}          0           0           0           0           0           0
{txt}  v33 {res}          0           0           0  -.26480919  -.46531758  -.76406289
{txt}  v34 {res}          0           0           0           0           0           0
{txt}  v35 {res}          0           0           0           0  -.06375784  -.97099141
{txt}  v36 {res}          0           0           0           0           0   .66586659
{txt}  v37 {res}          0           0           0  -.12502434  -.08893621  -.01147064
{txt}  v38 {res}          0           0           0           0  -.00646467  -.43690013
{txt}  v39 {res}          0           0           0  -.10631926  -.22456488  -.58807676
{txt}  v40 {res}          0           0           0           0           0  -.35701544
{txt}  v41 {res}          0           0           0           0   -.2996689  -2.1216478
{txt}  v42 {res}          0           0           0  -.44593572  -.70821005  -1.4707508
{txt}  v43 {res}          0           0           0  -.11633198  -.27122313  -.71018955
{txt}  v44 {res}          0           0           0  -.12871699  -.37395878  -1.0508246
{txt}  v45 {res}          0           0           0  -.30072458  -.43262396  -.67343948
{txt}  v46 {res}          0           0           0  -.41740057  -.70460002  -1.2119074
{txt}  v47 {res}          0           0           0  -.15060387  -.71411759  -1.5974548
{txt}  v48 {res}          0           0           0  -.16425604  -.58718251  -2.0645792
{txt}  v49 {res}          0           0           0  -.31893943  -.61866224  -1.0606296
{txt}  v50 {res}          0           0           0           0           0    -.127849
{txt}  v51 {res}          0           0           0           0  -.13709839  -.67051869
{txt}  v52 {res}          0           0   .18374361   .45211158   .45808122   .41951366
{txt}  v53 {res}          0   .63102486   1.5733686   3.7605486   4.4062321   5.0716909
{txt}  v54 {res}          0           0           0           0           0   1.0462338
{txt}  v55 {res}          0           0           0           0           0           0
{txt}  v56 {res}          0           0           0   .00137845   .00227828   .00462671
{txt}  v57 {res}          0   .00002668   .00028159   .00046685   .00050695   .00061037
{txt}_cons {res} -.45081192  -.81685285  -1.3345408  -1.6707147  -1.6005077   -1.532364
{reset}
{com}. mat G = ( 0,0,0,0,-0.0422529146575627,-0.272031262707042 \ 0,0,0,-0.00373203418724297,-0.0512671410498323,-0.125632626238845 \ 0,0,0,0.101141846279635,0.11883214230586,0.139109364166967 \ 0,0,0,0.0173756561991167,0.0526745401803319,0.195886595110133 \ 0,0,0.172804595227024,0.429605013071812,0.484763002454668,0.526731240528818 \ 0,0,0.215391390316697,0.439944587424189,0.491919474006125,0.638892239188151 \ 0,0.541244393029207,1.14272230384219,2.06887558871726,2.23002699666492,2.30014269388336 \ 0,0,0.136927707286204,0.480868178278047,0.531197496280493,0.55864194969041 \ 0,0,0.119571529292932,0.3601313065449,0.428423569813396,0.571760019260457 \ 0,0,0,0.0363964738545447,0.0661874609011232,0.0988644526800415 \ 0,0,0,0,0,-0.0886237382535084 \ 0,0,0,-0.0308097278466257,-0.089081775600141,-0.134749875433312 \ 0,0,0,0,0,0 \ 0,0,0,0,0.00795793603714984,0.0959052969098513 \ 0,0,0,0,0.187956709982398,0.766748734310841 \ 0,0.0569499824412161,0.261053578737326,0.474455181680385,0.582556859865158,0.992084036782018 \ 0,0,0.163352298428151,0.537635721901667,0.666555390326264,0.849404169191338 \ 0,0,0.0186179136972665,0.223578006225662,0.232610416364506,0.152792625551643 \ 0,0,0.0354864953419262,0.0684739350799352,0.0744387727276772,0.0809881016277326 \ 0,0,0.0623296656451264,0.30237957050336,0.401066076630547,0.680630170947902 \ 0.0251657497800995,0.244816018569017,0.285089535713845,0.231235215294809,0.21751235961023,0.226819320440981 \ 0,0,0,0.152438807435518,0.212558463696679,0.248079809754775 \ 0,0.512678317278518,0.908939351449302,1.62189944870526,1.88098268266277,2.25700936855849 \ 0,0,0.136512396818573,0.502377361626912,0.553687448356407,0.540585164364761 \ 0,-0.00711373831549181,-0.119341797786071,-0.650488655022833,-0.947791899988904,-1.5422976600939 \ 0,0,-0.0365713377744791,-0.311724419804555,-0.476376985691428,-0.865174810478425 \ 0,0,-0.00214239923991577,-0.150103996240846,-0.464229167129705,-1.43091728235785 \ 0,0,0,0,0,0.299518215687398 \ 0,0,0,0,-0.11287556060371,-0.970189677158865 \ 0,0,0,0,0,-0.213188194988553 \ 0,0,0,0,0,-0.15111484640071 \ 0,0,0,0,0,0 \ 0,0,0,-0.264763346644653,-0.465222166671986,-0.763495947479959 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0635939140607186,-0.963847734942651 \ 0,0,0,0,0,0.666907685726506 \ 0,0,0,-0.125014730751495,-0.0889334412435665,-0.011300721151613 \ 0,0,0,0,-0.00632977917857363,-0.436818510247387 \ 0,0,0,-0.106301779679491,-0.224438789391816,-0.586944463758824 \ 0,0,0,0,0,-0.358234655091931 \ 0,0,0,0,-0.299579530075859,-2.10564311868802 \ 0,0,0,-0.44588873213617,-0.708035508405983,-1.46655172058406 \ 0,0,0,-0.116295099407099,-0.271023655797981,-0.707676526963956 \ 0,0,0,-0.128692659562944,-0.373788716012293,-1.04867026256564 \ 0,0,0,-0.300713167088696,-0.432600838003125,-0.673078767971861 \ 0,0,0,-0.4173345191239,-0.704321130319187,-1.21019326162314 \ 0,0,0,-0.150587748961614,-0.714086849502039,-1.59652543630244 \ 0,0,0,-0.164230301991611,-0.586985955993564,-2.06052061918955 \ 0,0,0,-0.318945414490126,-0.61863047152071,-1.0603371670279 \ 0,0,0,0,0,-0.12810459024372 \ 0,0,0,0,-0.136996306452528,-0.671500830778917 \ 0,0,0.183754285937407,0.452118980142298,0.458172676826618,0.419905830636866 \ 0,0.631023867075545,1.57316434164323,3.76088285698889,4.4075093667459,5.07598763000083 \ 0,0,0,0,0,1.04898040886094 \ 0,0,0,0,0,0 \ 0,0,0,0.00137880130961895,0.00227997634698044,0.00463646241774424 \ 0,2.66765929383284e-05,0.000281563589013347,0.000466850681408009,0.000506933757806273,0.000609848729430626 \ -0.450811556523643,-0.816852292048691,-1.33465923808859,-1.67080357834546,-1.60068995272926,-1.53391838418534 )
{txt}
{com}. di mreldif(S,G)
{res}.00515341
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. lassologit v58 v1-v57 , ///
>         l(.15 .1 .05 .025 0.01 0.005) nocons  lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.15000{col 25}   1{col 31}   0.02234{col 43} 6328.73191{txt} {res}{col 56}-0.0251{txt}{col 65}{c |}{res}{col 67}Added v25.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   8{col 31}   1.01900{col 43} 5756.45348{txt} {res}{col 56} 0.0718{txt}{col 65}{c |}{res}{col 67}Added v7 v21 v23 v26 v27 v37 v53.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}  19{col 31}   4.75354{col 43} 4429.24805{txt} {res}{col 56} 0.2935{txt}{col 65}{c |}{res}{col 67}Added v12 v16 v17 v20 v24 v33 v42 v45 v46 v50 v52.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.02500{col 25}  31{col 31}   9.77793{col 43} 3492.58347{txt} {res}{col 56} 0.4525{txt}{col 65}{c |}{res}{col 67}Added v2 v5 v6 v8 v9 v39 v43 v44 v48 v49 v56 v57.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.01000{col 25}  41{col 31}  18.75168{col 43} 2807.93625{txt} {res}{col 56} 0.5695{txt}{col 65}{c |}{res}{col 67}Added v1 v15 v18 v19 v22 v29 v35 v41 v47 v51.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00500{col 25}  47{col 31}  26.67062{col 43} 2521.58283{txt} {res}{col 56} 0.6195{txt}{col 65}{c |}{res}{col 67}Added v4 v13 v30 v31 v38 v40.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[57,6]
             r1          r2          r3          r4          r5          r6
 v1 {res}          0           0           0           0  -.02006146  -.18090915
{txt} v2 {res}          0           0           0  -.04397075  -.11544876  -.15729578
{txt} v3 {res}          0           0           0           0           0           0
{txt} v4 {res}          0           0           0           0           0   .02487242
{txt} v5 {res}          0           0           0   .06679465   .19566852    .2595454
{txt} v6 {res}          0           0           0   .00224677   .11656607   .20003938
{txt} v7 {res}          0   .26501312   .79336838   1.2430608   1.7000844   1.9126355
{txt} v8 {res}          0           0           0   .15221167    .2964563   .35787464
{txt} v9 {res}          0           0           0   .02503226   .13771482    .2228854
{txt}v10 {res}          0           0           0           0           0           0
{txt}v11 {res}          0           0           0           0           0           0
{txt}v12 {res}          0           0   -.0629518  -.19501881  -.29156238  -.31418649
{txt}v13 {res}          0           0           0           0           0  -.08752765
{txt}v14 {res}          0           0           0           0           0           0
{txt}v15 {res}          0           0           0           0   .12040248   .35415977
{txt}v16 {res}          0           0   .10674838   .21247738   .32846378   .50138712
{txt}v17 {res}          0           0   .07100616   .21720529   .42037042   .56911052
{txt}v18 {res}          0           0           0           0   .04861229   .05754801
{txt}v19 {res}          0           0           0           0   -.0207722  -.04358666
{txt}v20 {res}          0           0   .02388992   .14960086   .29274787   .39807502
{txt}v21 {res}          0    .0024332   .06800583   .08331972   .08944981   .10543508
{txt}v22 {res}          0           0           0           0   .07750573   .14207058
{txt}v23 {res}          0    .2750091   .72503215   1.0667761   1.4427915   1.7201123
{txt}v24 {res}          0           0   .04791781    .2176692   .39468616   .47242716
{txt}v25 {res}  -.0223441  -.13268058  -.31353422  -.54830069  -.93692639  -1.2345624
{txt}v26 {res}          0  -.06089072  -.17754863  -.27709908   -.4647039  -.63136187
{txt}v27 {res}          0  -.01037416  -.07015976  -.12790323  -.25766454  -.51781556
{txt}v28 {res}          0           0           0           0           0           0
{txt}v29 {res}          0           0           0           0   -.0450506  -.35917998
{txt}v30 {res}          0           0           0           0           0  -.16185654
{txt}v31 {res}          0           0           0           0           0  -.04609584
{txt}v32 {res}          0           0           0           0           0           0
{txt}v33 {res}          0           0  -.08286867  -.28532324  -.58998655  -.79166097
{txt}v34 {res}          0           0           0           0           0           0
{txt}v35 {res}          0           0           0           0  -.09188217  -.21969196
{txt}v36 {res}          0           0           0           0           0           0
{txt}v37 {res}          0  -.06303259  -.30753902  -.38442604  -.35838327  -.31491949
{txt}v38 {res}          0           0           0           0           0  -.19187318
{txt}v39 {res}          0           0           0  -.04027656  -.21187894  -.35221793
{txt}v40 {res}          0           0           0           0           0  -.04833423
{txt}v41 {res}          0           0           0           0  -.10331514  -.40679861
{txt}v42 {res}          0           0  -.10372879  -.30584167  -.65985754   -.9641552
{txt}v43 {res}          0           0           0  -.03729477  -.33016877  -.57401122
{txt}v44 {res}          0           0           0  -.12648919  -.43642652  -.76291731
{txt}v45 {res}          0           0  -.16845035  -.36942115  -.60394324  -.73782218
{txt}v46 {res}          0           0  -.15989831  -.39750034  -.80081566  -1.1105821
{txt}v47 {res}          0           0           0           0  -.51157757  -.90202991
{txt}v48 {res}          0           0           0  -.09682151  -.49240934  -.92725786
{txt}v49 {res}          0           0           0   -.1204262  -.55872185  -.85199978
{txt}v50 {res}          0           0  -.25640046  -.73441925  -1.0800519  -1.1075618
{txt}v51 {res}          0           0           0           0   -.6243036  -1.1961592
{txt}v52 {res}          0           0   .02453401   .11323843   .19691359   .22739505
{txt}v53 {res}          0   .20956966   1.1899609   2.1372702     3.28624   3.9489588
{txt}v54 {res}          0           0           0           0           0           0
{txt}v55 {res}          0           0           0           0           0           0
{txt}v56 {res}          0           0           0   .00045081   .00094955   .00149993
{txt}v57 {res}          0           0           0   .00004226   .00014186   .00021363
{reset}
{com}. mat G = ( 0,0,0,0,-0.0200867422123263,-0.180963081874258 \ 0,0,0,-0.0439725562644103,-0.115450410602825,-0.157305593166378 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0.0248737630594846 \ 0,0,0,0.0667434523874724,0.195672120448769,0.259593231810163 \ 0,0,0,0.00222441489484255,0.116547135797629,0.199900956245658 \ 0,0.265014956681658,0.793520363853869,1.24314797930455,1.70013010830079,1.91290049195925 \ 0,0,0,0.152197580164138,0.296452514725046,0.357887094370555 \ 0,0,0,0.0250243043582219,0.137697541543941,0.222761802503909 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,-0.0630453430573573,-0.195111020480451,-0.291546951127566,-0.314161971862145 \ 0,0,0,0,0,-0.08756211017273 \ 0,0,0,0,0,0 \ 0,0,0,0,0.120424279364554,0.354187006038407 \ 0,0,0.106750439452276,0.21245760092625,0.328425173653119,0.500696339873835 \ 0,0,0.0709425995331555,0.217156375324238,0.420379234649733,0.56920674322488 \ 0,0,0,0,0.048629175049587,0.057696989533041 \ 0,0,0,0,-0.020789895089672,-0.0436000934364041 \ 0,0,0.0239005584077038,0.149615451999137,0.292733534056024,0.398108722332453 \ 0,0.00243201716946116,0.0680387538806802,0.083328722308754,0.0894534268473376,0.105425668464145 \ 0,0,0,0,0.0775090077892467,0.142075075770615 \ 0,0.275009205461234,0.72537916118375,1.06698790895246,1.44280441321528,1.72027974501352 \ 0,0,0.0479845894262583,0.217738196069698,0.394705684203277,0.472496250592033 \ -0.0223440877877455,-0.132668414169889,-0.313488233648016,-0.54838389731916,-0.936938075822474,-1.23481713891759 \ 0,-0.0609006144400859,-0.177568921138646,-0.277026881054149,-0.464709312028651,-0.63142026128668 \ 0,-0.0103741892860181,-0.070161267233627,-0.127904803022036,-0.257652912101769,-0.517338734762027 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0450461646744678,-0.359265300176881 \ 0,0,0,0,0,-0.161867521620582 \ 0,0,0,0,0,-0.046122253319544 \ 0,0,0,0,0,0 \ 0,0,-0.0828692104212642,-0.285316225156789,-0.58997916306237,-0.791695735414731 \ 0,0,0,0,0,0 \ 0,0,0,0,-0.0918778074927649,-0.219650592530303 \ 0,0,0,0,0,0 \ 0,-0.0630371681660719,-0.307539958672982,-0.384470440494363,-0.358372967333063,-0.314884147985183 \ 0,0,0,0,0,-0.191588425277942 \ 0,0,0,-0.0403046841400879,-0.211868440351775,-0.352145422328576 \ 0,0,0,0,0,-0.0483661679280512 \ 0,0,0,0,-0.10331814625645,-0.406815105529768 \ 0,0,-0.103710299079598,-0.305807487194226,-0.659857431681319,-0.964166817374027 \ 0,0,0,-0.037295524567914,-0.330160931322528,-0.57400332534841 \ 0,0,0,-0.126478415974642,-0.436418725123807,-0.762901014782063 \ 0,0,-0.168444091298225,-0.369421777328527,-0.603931392308208,-0.737816371222742 \ 0,0,-0.159895066345096,-0.397474317934418,-0.800796674646007,-1.11051462265085 \ 0,0,0,0,-0.511551026426417,-0.901980884578981 \ 0,0,0,-0.0967782082998046,-0.492401520570917,-0.927186765734769 \ 0,0,0,-0.120380350625124,-0.558716653197135,-0.851922825943988 \ 0,0,-0.256214350603698,-0.734193287497686,-1.08003814069837,-1.1074304761778 \ 0,0,0,0,-0.624291484186726,-1.19610720319507 \ 0,0,0.0245878706303293,0.11327052634246,0.196926767089997,0.227467498113895 \ 0,0.209570688353242,1.18953467225439,2.1372473049678,3.28631916741697,3.94944398020316 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0,0.000450775511481365,0.000949618067924462,0.00150040170166375 \ 0,0,0,4.22564218203648e-05,0.000141854663994748,0.000213631540830992 )
{txt}
{com}. di mreldif(S,G)
{res}.0004603
{txt}
{com}. assert mreldif(S,G)<0.03
{txt}
{com}. 
. lassologit v58 v1-v57 , ///
>         l(10 0.1 0.05 0.01 .005 0.001) nostd lambdan
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  10.00000{col 25}   2{col 31}   0.75408{col 43} 5758.94875{txt} {res}{col 56} 0.0679{txt}{col 65}{c |}{res}{col 67}Added v56 v57 _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.10000{col 25}   6{col 31}   1.87688{col 43} 4632.59750{txt} {res}{col 56} 0.2528{txt}{col 65}{c |}{res}{col 67}Added v19 v21 v25 v27.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.05000{col 25}   9{col 31}   2.74988{col 43} 4135.43661{txt} {res}{col 56} 0.3352{txt}{col 65}{c |}{res}{col 67}Added v16 v52 v55.
     4{txt}{col 7}{c |}{res}   4{col 13}   0.01000{col 25}  27{col 31}  10.21759{col 43} 2767.41411{txt} {res}{col 56} 0.5679{txt}{col 65}{c |}{res}{col 67}Added v2 v4 v5 v7 v8 v12 v17 v18 v20 v22 v23 v24 v26 v33 v42 v44 v45 v46 v53. Removed
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v55.
     5{txt}{col 7}{c |}{res}   5{col 13}   0.00500{col 25}  31{col 31}  15.55915{col 43} 2431.09288{txt} {res}{col 56} 0.6248{txt}{col 65}{c |}{res}{col 67}Added v6 v10 v49 v55.
     6{txt}{col 7}{c |}{res}   6{col 13}   0.00100{col 25}  48{col 31}  32.78656{col 43} 2122.06825{txt} {res}{col 56} 0.6852{txt}{col 65}{c |}{res}{col 67}Added v1 v3 v9 v14 v15 v28 v29 v30 v35 v36 v37 v38 v39 v41 v43 v48 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[58,6]
               r1          r2          r3          r4          r5          r6
   v1 {res}          0           0           0           0           0  -.19778409
{txt}   v2 {res}          0           0           0  -.02640737  -.06282796  -.11831854
{txt}   v3 {res}          0           0           0           0           0   .10221539
{txt}   v4 {res}          0           0           0   .00518221   .04337058   .25484087
{txt}   v5 {res}          0           0           0   .37784565   .45682998   .55176417
{txt}   v6 {res}          0           0           0           0   .26936548   .62339715
{txt}   v7 {res}          0           0           0   1.1006582   1.5430766   2.1306211
{txt}   v8 {res}          0           0           0   .32065644   .44505385   .54499121
{txt}   v9 {res}          0           0           0           0           0   .44496574
{txt}  v10 {res}          0           0           0           0   .02054731   .10119139
{txt}  v11 {res}          0           0           0           0           0           0
{txt}  v12 {res}          0           0           0  -.05321805  -.11009053  -.14445188
{txt}  v13 {res}          0           0           0           0           0           0
{txt}  v14 {res}          0           0           0           0           0   .05455388
{txt}  v15 {res}          0           0           0           0           0   .11401183
{txt}  v16 {res}          0           0   .21936492   .72878669   .82821067   .93594303
{txt}  v17 {res}          0           0           0   .23558133   .45950723   .79569813
{txt}  v18 {res}          0           0           0   .08954057   .14845751   .14070056
{txt}  v19 {res}          0   .10940662    .1294832   .10910207   .10041799   .08834172
{txt}  v20 {res}          0           0           0   .09607662   .21704328   .56898511
{txt}  v21 {res}          0   .15584491   .28833021   .29535417   .26434445   .22769464
{txt}  v22 {res}          0           0           0   .05732173   .08980879   .23328379
{txt}  v23 {res}          0           0           0   .89897318      1.2347   1.8468381
{txt}  v24 {res}          0           0           0   .21392671   .39514922   .50367481
{txt}  v25 {res}          0  -.13762482  -.42827084  -1.1855121  -1.4214046   -1.785415
{txt}  v26 {res}          0           0           0  -.04584883  -.23042398  -.69433495
{txt}  v27 {res}          0   -.0487535  -.14705382  -.81880034  -1.3521354  -3.9525403
{txt}  v28 {res}          0           0           0           0           0   .22122084
{txt}  v29 {res}          0           0           0           0           0   -.5740448
{txt}  v30 {res}          0           0           0           0           0  -.03702865
{txt}  v31 {res}          0           0           0           0           0           0
{txt}  v32 {res}          0           0           0           0           0           0
{txt}  v33 {res}          0           0           0   -.0939157  -.27757642  -.66033463
{txt}  v34 {res}          0           0           0           0           0           0
{txt}  v35 {res}          0           0           0           0           0  -.37652156
{txt}  v36 {res}          0           0           0           0           0    .4602056
{txt}  v37 {res}          0           0           0           0           0  -.02352392
{txt}  v38 {res}          0           0           0           0           0  -.13248341
{txt}  v39 {res}          0           0           0           0           0    -.433889
{txt}  v40 {res}          0           0           0           0           0           0
{txt}  v41 {res}          0           0           0           0           0  -.47952157
{txt}  v42 {res}          0           0           0  -.36844948  -.62316777  -1.3808727
{txt}  v43 {res}          0           0           0           0           0   -.1410597
{txt}  v44 {res}          0           0           0  -.01742596  -.18149697  -.89246981
{txt}  v45 {res}          0           0           0  -.26919949  -.38036262  -.61729771
{txt}  v46 {res}          0           0           0  -.54664452  -.86596257  -1.3275106
{txt}  v47 {res}          0           0           0           0           0           0
{txt}  v48 {res}          0           0           0           0           0  -.78504838
{txt}  v49 {res}          0           0           0           0  -.04177491  -.76203782
{txt}  v50 {res}          0           0           0           0           0           0
{txt}  v51 {res}          0           0           0           0           0           0
{txt}  v52 {res}          0           0   .03888133    .3910668   .40061504   .40088796
{txt}  v53 {res}          0           0           0   .29974488   1.5271148   4.1510453
{txt}  v54 {res}          0           0           0           0           0   .22281122
{txt}  v55 {res}          0           0   .00218539           0  -.00176158  -.01271967
{txt}  v56 {res}   .0002509   .02115678   .01910168   .01230366    .0102625   .00877865
{txt}  v57 {res}   .0011691   .00015296   .00024273   .00041311    .0004295   .00047305
{txt}_cons {res} -.75266054   -1.403943  -1.4769654  -1.5596371  -1.5558633  -1.5282169
{reset}
{com}. mat G = ( 0,0,0,0,0,-0.196606830871361 \ 0,0,0,-0.0263959141205755,-0.0627951579638412,-0.118426808731766 \ 0,0,0,0,0,0.102694111984808 \ 0,0,0,0.00516845136302719,0.0433845100498495,0.255066666352933 \ 0,0,0,0.377850977275016,0.456724641505493,0.551590006500719 \ 0,0,0,0,0.269285747828233,0.621688751483009 \ 0,0,0,1.10087981403029,1.54368806896071,2.13177925264091 \ 0,0,0,0.320728980387188,0.445263521331234,0.544826963080417 \ 0,0,0,0,0,0.443649074799542 \ 0,0,0,0,0.0204087663270599,0.100911255476619 \ 0,0,0,0,0,0 \ 0,0,0,-0.0531937638595258,-0.110026127046077,-0.144729540552861 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0.0541979592970806 \ 0,0,0,0,0,0.115097436073612 \ 0,0,0.219337625782819,0.728276302338932,0.828344228043666,0.936568757145528 \ 0,0,0,0.235627862792052,0.459662402282917,0.794066489512141 \ 0,0,0,0.0896053571721042,0.148727268825427,0.141156832349543 \ 0,0.109401406887508,0.12949040110083,0.109114656531446,0.100431962365842,0.088465900027753 \ 0,0,0,0.0960780992452676,0.217083256616456,0.56966154977343 \ 0,0.155863471226981,0.288325708867917,0.295300028640053,0.2642762693284,0.227564580072034 \ 0,0,0,0.0573220238010432,0.0897145232657215,0.233672717839671 \ 0,0,0,0.899098761929624,1.23558597332666,1.84929666229257 \ 0,0,0,0.213989045389802,0.395496066797918,0.50471797450479 \ 0,-0.137633831311825,-0.428258460781284,-1.18581357954125,-1.42295663664892,-1.78665244112237 \ 0,0,0,-0.0457689200355376,-0.229636533094445,-0.693978642684788 \ 0,-0.0487632571003764,-0.147039973104196,-0.816361941819738,-1.33920940706366,-3.83283619415318 \ 0,0,0,0,0,0.221839810370222 \ 0,0,0,0,0,-0.571676198017221 \ 0,0,0,0,0,-0.034641955163953 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0,-0.0939506854962543,-0.277644336330768,-0.660202193225169 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.375211673639146 \ 0,0,0,0,0,0.462589340216143 \ 0,0,0,0,0,-0.0233857855396148 \ 0,0,0,0,0,-0.13273040571758 \ 0,0,0,0,0,-0.432952185786407 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.47832595201352 \ 0,0,0,-0.368318040619443,-0.622511232094226,-1.37637221332031 \ 0,0,0,0,0,-0.139810725682437 \ 0,0,0,-0.0174002302406321,-0.181242700957882,-0.891323650902357 \ 0,0,0,-0.269149657094932,-0.380150922271061,-0.616870622105827 \ 0,0,0,-0.546281049241329,-0.864630097661637,-1.32512423900005 \ 0,0,0,0,0,0 \ 0,0,0,0,0,-0.783172594822248 \ 0,0,0,0,-0.0417654564340482,-0.762406591054006 \ 0,0,0,0,0,0 \ 0,0,0,0,0,0 \ 0,0,0.0388465427763881,0.391143596322809,0.400821242459232,0.401755305686915 \ 0,0,0,0.299926255332921,1.528093609498,4.15578120724715 \ 0,0,0,0,0,0.224049518522976 \ 0,0,0.00228751649055222,0,-0.00149114153314493,-0.0126854106956653 \ 0.000251176249855191,0.0211531130365377,0.0190977387878989,0.0123128199830305,0.0102571927074542,0.0087378756648603 \ 0.00116904746155995,0.000153035327786397,0.000242754480855713,0.000412991010293585,0.000429815225601432,0.000473779800524816 \ -0.752661384082521,-1.40386117252347,-1.47716148408643,-1.56003952656892,-1.55744581223666,-1.5298166412315 )
{txt}
{com}. di mreldif(S,G)
{res}.02476892
{txt}
{com}. assert mreldif(S,G)<0.03 // 3% deviation!
{txt}
{com}.  
. lassologit v58 v1-v57 , ///
>         l(40 10 1  0.1  0.05) nocons nostd lambdan
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  40.00000{col 25}   1{col 31}   0.00003{col 43} 6368.88594{txt} {res}{col 56}-0.0316{txt}{col 65}{c |}{res}{col 67}Added v57.
     2{txt}{col 7}{c |}{res}   3{col 13}   1.00000{col 25}   2{col 31}   0.00561{col 43} 6097.93229{txt} {res}{col 56} 0.0129{txt}{col 65}{c |}{res}{col 67}Added v56.
     3{txt}{col 7}{c |}{res}   4{col 13}   0.10000{col 25}   5{col 31}   0.59380{col 43} 5138.62109{txt} {res}{col 56} 0.1702{txt}{col 65}{c |}{res}{col 67}Added v25 v27 v55.
     4{txt}{col 7}{c |}{res}   5{col 13}   0.05000{col 25}  11{col 31}   1.66613{col 43} 4497.91281{txt} {res}{col 56} 0.2776{txt}{col 65}{c |}{res}{col 67}Added v2 v12 v16 v21 v42 v45 v46. Removed v57.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat S = e(betas)'
{txt}
{com}. mat list S
{res}
{txt}S[57,5]
             r1          r2          r3          r4          r5
 v1 {res}          0           0           0           0           0
{txt} v2 {res}          0           0           0           0  -.00388742
{txt} v3 {res}          0           0           0           0           0
{txt} v4 {res}          0           0           0           0           0
{txt} v5 {res}          0           0           0           0           0
{txt} v6 {res}          0           0           0           0           0
{txt} v7 {res}          0           0           0           0           0
{txt} v8 {res}          0           0           0           0           0
{txt} v9 {res}          0           0           0           0           0
{txt}v10 {res}          0           0           0           0           0
{txt}v11 {res}          0           0           0           0           0
{txt}v12 {res}          0           0           0           0  -.06085059
{txt}v13 {res}          0           0           0           0           0
{txt}v14 {res}          0           0           0           0           0
{txt}v15 {res}          0           0           0           0           0
{txt}v16 {res}          0           0           0           0   .06414037
{txt}v17 {res}          0           0           0           0           0
{txt}v18 {res}          0           0           0           0           0
{txt}v19 {res}          0           0           0           0           0
{txt}v20 {res}          0           0           0           0           0
{txt}v21 {res}          0           0           0           0   .07938986
{txt}v22 {res}          0           0           0           0           0
{txt}v23 {res}          0           0           0           0           0
{txt}v24 {res}          0           0           0           0           0
{txt}v25 {res}          0           0           0  -.43330804  -.82648479
{txt}v26 {res}          0           0           0           0           0
{txt}v27 {res}          0           0           0  -.14477986  -.27017973
{txt}v28 {res}          0           0           0           0           0
{txt}v29 {res}          0           0           0           0           0
{txt}v30 {res}          0           0           0           0           0
{txt}v31 {res}          0           0           0           0           0
{txt}v32 {res}          0           0           0           0           0
{txt}v33 {res}          0           0           0           0           0
{txt}v34 {res}          0           0           0           0           0
{txt}v35 {res}          0           0           0           0           0
{txt}v36 {res}          0           0           0           0           0
{txt}v37 {res}          0           0           0           0           0
{txt}v38 {res}          0           0           0           0           0
{txt}v39 {res}          0           0           0           0           0
{txt}v40 {res}          0           0           0           0           0
{txt}v41 {res}          0           0           0           0           0
{txt}v42 {res}          0           0           0           0  -.00074516
{txt}v43 {res}          0           0           0           0           0
{txt}v44 {res}          0           0           0           0           0
{txt}v45 {res}          0           0           0           0  -.14858306
{txt}v46 {res}          0           0           0           0  -.18729426
{txt}v47 {res}          0           0           0           0           0
{txt}v48 {res}          0           0           0           0           0
{txt}v49 {res}          0           0           0           0           0
{txt}v50 {res}          0           0           0           0           0
{txt}v51 {res}          0           0           0           0           0
{txt}v52 {res}          0           0           0           0           0
{txt}v53 {res}          0           0           0           0           0
{txt}v54 {res}          0           0           0           0           0
{txt}v55 {res}          0           0           0   -.0063939  -.01403062
{txt}v56 {res}          0           0   .00561154   .00927929   .01054754
{txt}v57 {res}  .00003411   .00038152  -9.444e-07  -.00004264           0
{reset}
{com}. mat G = ( 0,0,0,0,0 \ 0,0,0,0,-0.00388390194575201 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.0608399932100172 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0.0641514339556632 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0.0793813559307355 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,-0.433326247098604,-0.826496410034253 \ 0,0,0,0,0 \ 0,0,0,-0.144784796466159,-0.270173956885227 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.000744445387214381 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,-0.148578232510563 \ 0,0,0,0,-0.187291134609176 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,0,0 \ 0,0,0,-0.00636951077256207,-0.0140453997113308 \ 0,0,0.00561069230547681,0.00927731836362141,0.01054896589884 \ 3.41081748400473e-05,0.000381523296092164,-8.95105672525863e-07,-4.26170125134684e-05,0 )
{txt}
{com}. di mreldif(S,G)
{res}.00002423
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. 
. ********************************************************************************
. *** Verify largest lambda value: Spam data                                                                       ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. // OK
. lassologit v58 v1-v57 , lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18727{col 25}   0{col 31}   0.43034{col 43} 6170.15284{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.01873{col 25}  28{col 31}  13.05968{col 43} 2942.59413{txt} {res}{col 56} 0.5401{txt}{col 65}{c |}{res}{col 67}Added v3 v5 v6 v7 v8 v9 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v33 v37 v42 v44
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v45 v46 v52 v53 v56 v57.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.00187{col 25}  52{col 31}  35.30333{col 43} 2183.44429{txt} {res}{col 56} 0.6777{txt}{col 65}{c |}{res}{col 67}Added v1 v2 v4 v10 v12 v14 v15 v28 v29 v30 v31 v35 v36 v38 v39 v40 v41 v43 v47 v48 v49
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v50 v51 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.18726511
{txt}
{com}. assert reldif(L[1,1],0.1872651)<10e-5
{txt}
{com}.   
. // OK
. lassologit v58 v1-v57 , nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  73.81646{col 25}   0{col 31}   0.43034{col 43} 6170.15284{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   7.38165{col 25}   2{col 31}   0.78779{col 43} 5653.70028{txt} {res}{col 56} 0.0849{txt}{col 65}{c |}{res}{col 67}Added v56 v57.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}73.816459
{txt}
{com}. assert reldif(L[1,1],73.81646)<10e-5
{txt}
{com}.  
. // OK
. lassologit v58 v1-v57 , nocons lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   0.01603{col 25}  37{col 31}  13.90974{col 43} 3103.63775{txt} {res}{col 56} 0.5191{txt}{col 65}{c |}{res}{col 67}Added v2 v5 v6 v7 v8 v9 v12 v15 v16 v17 v18 v20 v21 v22 v23 v24 v25 v26 v27 v33 v35 v37
{txt}{col 7}{c |}{col 65}{c |}{res}{col 67}v39 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v56 v57.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.00160{col 25}  51{col 31}  40.48332{col 43} 2295.62807{txt} {res}{col 56} 0.6585{txt}{col 65}{c |}{res}{col 67}Added v1 v4 v10 v13 v14 v19 v28 v29 v30 v31 v38 v40 v41 v54.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.16028589
{txt}
{com}. assert reldif(L[1,1],0.1602859)<10e-5
{txt}
{com}.  
. // OK
. lassologit v58 v1-v57 , nocons nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  43.80048{col 25}   0{col 31}   0.00000{col 43} 6378.34036{txt} {res}{col 56}-0.0337{txt}{col 65}{c |}{res}{col 67}Added v57.
     2{txt}{col 7}{c |}{res}   2{col 13}   4.38005{col 25}   2{col 31}   0.00246{col 43} 6170.28359{txt} {res}{col 56} 0.0012{txt}{col 65}{c |}{res}{col 67}Added v56.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}43.800478
{txt}
{com}. assert reldif(L[1,1],43.80048)<10e-5
{txt}
{com}. 
. 
. ********************************************************************************
. *** Verify largest lambda value: Prostate data                                                           ***
. *** comparison with glmnet                                                                                                       ***
. ********************************************************************************  
. 
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. // OK
. lassologit ybin lcavol-pgg45 , lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.24793{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}   0.02479{col 25}   5{col 31}  14.15184{col 43}   85.09286{txt} {res}{col 56} 0.3829{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight lbph svi gleason.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.00248{col 25}   8{col 31}  25.01865{col 43}   83.24043{txt} {res}{col 56} 0.4479{txt}{col 65}{c |}{res}{col 67}Added age lcp pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}.2479347
{txt}
{com}. assert reldif(L[1,1],0.2479347)<10e-5
{txt}
{com}.   
. // OK
. lassologit ybin lcavol-pgg45 , nostd lambdan  lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   4.28685{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added pgg45 _cons.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.04287{col 25}   3{col 31}   1.62046{col 43}   92.81631{txt} {res}{col 56} 0.2862{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}4.286853
{txt}
{com}. assert reldif(L[1,1],4.286853)<10e-5
{txt}
{com}.  
. // OK
. lassologit ybin lcavol-pgg45, nocons lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   2{col 13}   0.18871{col 25}   3{col 31}   0.29577{col 43}  113.64207{txt} {res}{col 56} 0.1061{txt}{col 65}{c |}{res}{col 67}Added lcavol lweight gleason.
     2{txt}{col 7}{c |}{res}   3{col 13}   0.01887{col 25}   7{col 31}   3.32475{col 43}   91.25771{txt} {res}{col 56} 0.3450{txt}{col 65}{c |}{res}{col 67}Added age lbph svi pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}1.8870631
{txt}
{com}. assert reldif(L[1,1],1.887063)<10e-5
{txt}
{com}.  
. // OK
. lassologit ybin lcavol-pgg45 , nocons nostd lambdan lcount(3)
{res}{txt}Obtaining solution for 3 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
...
{res}
{txt}  Knot{c |}  ID    Lambda/n    s     L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  12.14948{col 25}   0{col 31}   0.00000{col 43}  134.47055{txt} {res}{col 56}-0.1063{txt}{col 65}{c |}{res}{col 67}Added age.
     2{txt}{col 7}{c |}{res}   2{col 13}   1.21495{col 25}   2{col 31}   0.02635{col 43}  113.45851{txt} {res}{col 56} 0.0940{txt}{col 65}{c |}{res}{col 67}Added pgg45.
     3{txt}{col 7}{c |}{res}   3{col 13}   0.12149{col 25}   4{col 31}   0.42297{col 43}  103.64897{txt} {res}{col 56} 0.2020{txt}{col 65}{c |}{res}{col 67}Added lcavol lbph.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat L= e(lambdas)
{txt}
{com}. di L[1,1]
{res}12.149485
{txt}
{com}. assert reldif(L[1,1],12.14948)<10e-5
{txt}
{com}. 
. 
. ********************************************************************************
. *** plotting                                                                 ***
. ******************************************************************************** 
. 
. clear all 
{txt}
{com}. 
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(lambda)  
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(lnlambda) plotvar(age svi)
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}(50 real changes made)
{res}{txt}
{com}. 
. lassologit ybin lcavol-pgg45, plotpath(norm) 
{res}{txt}Obtaining solution for 50 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50

{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}  24.04967{col 25}   0{col 31}   0.75567{col 43}  121.55230{txt} {res}{col 56} 0.0000{txt}{col 65}{c |}{res}{col 67}Added _cons.
     2{txt}{col 7}{c |}{res}   2{col 13}  21.89237{col 25}   1{col 31}   0.72708{col 43}  118.88228{txt} {res}{col 56} 0.0386{txt}{col 65}{c |}{res}{col 67}Added lcavol.
     3{txt}{col 7}{c |}{res}   7{col 13}  13.68394{col 25}   3{col 31}   0.69877{col 43}  107.79964{txt} {res}{col 56} 0.1629{txt}{col 65}{c |}{res}{col 67}Added lweight gleason.
     4{txt}{col 7}{c |}{res}  14{col 13}   7.08756{col 25}   4{col 31}   7.64951{col 43}   93.43198{txt} {res}{col 56} 0.2977{txt}{col 65}{c |}{res}{col 67}Added svi.
     5{txt}{col 7}{c |}{res}  17{col 13}   5.34623{col 25}   5{col 31}   9.95724{col 43}   91.46466{txt} {res}{col 56} 0.3305{txt}{col 65}{c |}{res}{col 67}Added lbph.
     6{txt}{col 7}{c |}{res}  28{col 13}   1.90138{col 25}   6{col 31}  15.02132{col 43}   86.13353{txt} {res}{col 56} 0.3909{txt}{col 65}{c |}{res}{col 67}Added age.
     7{txt}{col 7}{c |}{res}  31{col 13}   1.43423{col 25}   7{col 31}  15.84016{col 43}   86.71472{txt} {res}{col 56} 0.4028{txt}{col 65}{c |}{res}{col 67}Added lcp.
     8{txt}{col 7}{c |}{res}  34{col 13}   1.08186{col 25}   8{col 31}  17.52795{col 43}   86.80734{txt} {res}{col 56} 0.4186{txt}{col 65}{c |}{res}{col 67}Added pgg45.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.
{res}{txt}
{com}. 
. 
. ********************************************************************************
. *** verify post-logit and log-lik value                                                                          *** 
. ********************************************************************************
. 
. clear all 
{txt}
{com}. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')   postl
{txt}  3{com}.         mat b1 = e(b)  
{txt}  4{com}.         local L1 = e(ll)
{txt}  5{com}. 
.         local sel = e(selected)
{txt}  6{com}.         di "lambda=`lam'; selected=`sel'"
{txt}  7{com}. 
.         logit v58 `sel', iterate(100)
{txt}  8{com}.         mat b2 = e(b)  
{txt}  9{com}.         local L2 = e(ll)
{txt} 10{com}. 
.         di mreldif(b1,b2)
{txt} 11{com}. 
.         assert mreldif(b1,b2)<0.0001
{txt} 12{com}. 
.         // verify loglik
.         assert reldif(`L1',`L2')<0.01
{txt} 13{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3692042     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1475768     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1174313      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.7615226      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5623306      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8463987      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2896317      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5680123      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6756963      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1263267      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2511355     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1413100     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0740926     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1357520      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2074724      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0386915      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9409362      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1188070      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0804495      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0290242      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2428715      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2108562      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2349073      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4408466      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9027888     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0397313     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}     -9.1972917    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4379553      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3100552     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3223888     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1781287     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      1.7948612      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7719664     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.4714318      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0007412     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9168614      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0332753      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5860616     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8472510     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2889351     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -20.8833860    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.5559820     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1843701     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5460445     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7825324     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4498374     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.2844237     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.8191058     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2800913     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1760998     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6439888     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3538298      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3056746      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3519148      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0001970      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0089008      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007982      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5315197     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.187; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3795209     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1467913     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1157761      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.9716965      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624505      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8616386      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2847019      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5687804      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6998992      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1266214      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2524077     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1403026     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0753272     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1397350      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2117089      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0388193      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9487349      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1198214      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0807597      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0375172      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2427115      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2068938      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2329955      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4339031      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9106100     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0398751     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.2915219    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4412263      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3880733     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3254858     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1744424     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.1404243      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7596552     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5638729      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0235225     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9204137      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0396617      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5910244     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8555660     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2946441     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -26.2946608    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6143438     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2108971     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5584637     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7872504     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4543085     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3036945     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9301962     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2852256     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1810884     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6482530     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3506173      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3182776      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3767498      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0050268      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090181      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008148      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5462419     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.1; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3828281     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1464930     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1152631      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.0509443      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624835      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8674431      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2828129      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5690493      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7092168      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1267541      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2530823     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1398791     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0761932     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1411787      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2144149      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387776      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9518412      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1200847      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0808861      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0407267      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2425665      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2053458      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2332138      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4315636      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9134605     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399226     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.7063679    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4424025      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4166123     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3266379     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1732144     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.2613304      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7539537     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5953559      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0321959     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9214947      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0418289      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5927692     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8584454     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2971972     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -29.6752760    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6357263     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2208350     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5629612     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7888484     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4557155     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3103380     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9605069     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2869584     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1829749     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6503649     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3495495      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3229071      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3848902      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0069386      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090519      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008221      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5521316     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.07; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3849274     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1462885     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1149405      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.1058676      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624898      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8715170      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2815179      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5692255      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7157506      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1268710      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2536285     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1395466     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0769378     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1421574      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2173234      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387121      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9540473      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1202107      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809840      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0428692      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2424350      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2042520      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2341504      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4300332      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9154504     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399753     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.9948343    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4432234      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4361055     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3274366     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1723863     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.3424475      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7495143     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6162046      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0383194     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9221738      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0432446      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5939307     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8603469     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2990815     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -32.8894320    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6503958     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2277989     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5659906     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7898850     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4566204     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3147392     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9772911     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2881173     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1843068     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6520661     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3488598      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3261695      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3901642      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0082960      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090713      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008278      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5563906     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.05; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3886895     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458813     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1143108      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2213340      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624238      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8804338      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2790769      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695447      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7301435      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1272926      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2551654     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1386273     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0789620     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1441412      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2303998      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385889      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9586597      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203123      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812351      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0466466      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420596      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2019345      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2414597      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4271052      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9194821     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401514     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6027970    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4449813      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4759820     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3292718     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1706694     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5072109      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7402659     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6576393      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0517198     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9234327      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0458969      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5962390     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8640788     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3033900     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -42.3118349    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6806297     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2428907     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5717993     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7918480     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4586183     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3235679     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0067234     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2904983     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1872684     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6562423     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3475350      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3337881      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4006392      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0112030      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091073      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008406      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5659424     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.01; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3891032     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458322     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1142292      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2363789      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624075      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8816422      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2788092      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695782      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7321284      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1273717      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2554198     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1384808     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0792727     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1443903      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2330749      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385894      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9592432      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203128      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812716      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0470322      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420006      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2016382      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2431769      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4267556      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9199569     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401750     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6818213    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4452073      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4810318     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3295447     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1704500     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5282029      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7393075     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6628052      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0535190     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9235803      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0462026      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5965280     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8645431     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3039844     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -43.6311964    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6844659     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2448996     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5724703     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7920856     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4589164     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3247041     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0109206     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2908047     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1876723     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6568091     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3473709      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3348968      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4019885      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0115804      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091126      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008421      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5672302     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
lambda=.005; selected=v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 v30 v31 v32 v33 v34 v35 v36 v37 v38 v39 v40 v41 v42 v43 v44 v45 v46 v47 v48 v49 v50 v51 v52 v53 v54 v55 v56 v57

{res}{txt}Iteration 0:{space 3}log likelihood = {res:-3085.0764}  
Iteration 1:{space 3}log likelihood = {res:-1278.5523}  
Iteration 2:{space 3}log likelihood = {res:-1087.2388}  
Iteration 3:{space 3}log likelihood = {res:-962.06637}  
Iteration 4:{space 3}log likelihood = {res:-926.16875}  
Iteration 5:{space 3}log likelihood = {res:-915.75619}  
Iteration 6:{space 3}log likelihood = {res:-909.19581}  
Iteration 7:{space 3}log likelihood = {res:-908.54434}  
Iteration 8:{space 3}log likelihood = {res:-907.95223}  
Iteration 9:{space 3}log likelihood = {res:-907.88317}  
Iteration 10:{space 2}log likelihood = {res:-907.88274}  
Iteration 11:{space 2}log likelihood = {res:-907.88274}  
{res}
{txt}Logistic regression{col 49}Number of obs{col 67}= {res}     4,601
{txt}{col 49}LR chi2({res}57{txt}){col 67}= {res}   4354.39
{txt}{col 49}Prob > chi2{col 67}= {res}    0.0000
{txt}Log likelihood = {res}-907.88274{txt}{col 49}Pseudo R2{col 67}= {res}    0.7057

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         v58{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}v1 {c |}{col 14}{res}{space 2}-.3895185{col 26}{space 2} .2314522{col 37}{space 1}   -1.68{col 46}{space 3}0.092{col 54}{space 4}-.8431565{col 67}{space 3} .0641194
{txt}{space 10}v2 {c |}{col 14}{res}{space 2}-.1457768{col 26}{space 2} .0692793{col 37}{space 1}   -2.10{col 46}{space 3}0.035{col 54}{space 4}-.2815618{col 67}{space 3}-.0099919
{txt}{space 10}v3 {c |}{col 14}{res}{space 2} .1141402{col 26}{space 2} .1103011{col 37}{space 1}    1.03{col 46}{space 3}0.301{col 54}{space 4} -.102046{col 67}{space 3} .3303265
{txt}{space 10}v4 {c |}{col 14}{res}{space 2}  2.25152{col 26}{space 2} 1.507012{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-.7021702{col 67}{space 3} 5.205209
{txt}{space 10}v5 {c |}{col 14}{res}{space 2} .5623843{col 26}{space 2} .1017997{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .3628607{col 67}{space 3}  .761908
{txt}{space 10}v6 {c |}{col 14}{res}{space 2} .8829526{col 26}{space 2} .2498202{col 37}{space 1}    3.53{col 46}{space 3}0.000{col 54}{space 4} .3933141{col 67}{space 3} 1.372591
{txt}{space 10}v7 {c |}{col 14}{res}{space 2} 2.278517{col 26}{space 2} .3328057{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4}  1.62623{col 67}{space 3} 2.930805
{txt}{space 10}v8 {c |}{col 14}{res}{space 2} .5696134{col 26}{space 2} .1681855{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .2399759{col 67}{space 3} .8992509
{txt}{space 10}v9 {c |}{col 14}{res}{space 2} .7342982{col 26}{space 2} .2849103{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .1758842{col 67}{space 3} 1.292712
{txt}{space 9}v10 {c |}{col 14}{res}{space 2} .1274624{col 26}{space 2} .0726213{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0148728{col 67}{space 3} .2697976
{txt}{space 9}v11 {c |}{col 14}{res}{space 2}-.2557123{col 26}{space 2}  .297884{col 37}{space 1}   -0.86{col 46}{space 3}0.391{col 54}{space 4}-.8395542{col 67}{space 3} .3281297
{txt}{space 9}v12 {c |}{col 14}{res}{space 2}-.1383133{col 26}{space 2} .0740465{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.2834418{col 67}{space 3} .0068151
{txt}{space 9}v13 {c |}{col 14}{res}{space 2}-.0796125{col 26}{space 2} .2302841{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-.5309611{col 67}{space 3}  .371736
{txt}{space 9}v14 {c |}{col 14}{res}{space 2} .1446573{col 26}{space 2} .1363872{col 37}{space 1}    1.06{col 46}{space 3}0.289{col 54}{space 4}-.1226566{col 67}{space 3} .4119712
{txt}{space 9}v15 {c |}{col 14}{res}{space 2}   1.2362{col 26}{space 2} .7254565{col 37}{space 1}    1.70{col 46}{space 3}0.088{col 54}{space 4}-.1856687{col 67}{space 3} 2.658069
{txt}{space 9}v16 {c |}{col 14}{res}{space 2}  1.03859{col 26}{space 2} .1456956{col 37}{space 1}    7.13{col 46}{space 3}0.000{col 54}{space 4} .7530318{col 67}{space 3} 1.324148
{txt}{space 9}v17 {c |}{col 14}{res}{space 2} .9598609{col 26}{space 2} .2250906{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} .5186913{col 67}{space 3}  1.40103
{txt}{space 9}v18 {c |}{col 14}{res}{space 2} .1203139{col 26}{space 2} .1171783{col 37}{space 1}    1.03{col 46}{space 3}0.305{col 54}{space 4}-.1093513{col 67}{space 3} .3499791
{txt}{space 9}v19 {c |}{col 14}{res}{space 2} .0813108{col 26}{space 2} .0350458{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0126223{col 67}{space 3} .1499993
{txt}{space 9}v20 {c |}{col 14}{res}{space 2} 1.047419{col 26}{space 2} .5382875{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0076049{col 67}{space 3} 2.102443
{txt}{space 9}v21 {c |}{col 14}{res}{space 2} .2419341{col 26}{space 2} .0524285{col 37}{space 1}    4.61{col 46}{space 3}0.000{col 54}{space 4} .1391762{col 67}{space 3} .3446921
{txt}{space 9}v22 {c |}{col 14}{res}{space 2} .2013226{col 26}{space 2} .1626625{col 37}{space 1}    1.24{col 46}{space 3}0.216{col 54}{space 4}-.1174901{col 67}{space 3} .5201353
{txt}{space 9}v23 {c |}{col 14}{res}{space 2} 2.245237{col 26}{space 2} .4714513{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.321209{col 67}{space 3} 3.169264
{txt}{space 9}v24 {c |}{col 14}{res}{space 2} .4263957{col 26}{space 2} .1621187{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1086488{col 67}{space 3} .7441425
{txt}{space 9}v25 {c |}{col 14}{res}{space 2}-1.920416{col 26}{space 2} .3128276{col 37}{space 1}   -6.14{col 46}{space 3}0.000{col 54}{space 4}-2.533547{col 67}{space 3}-1.307286
{txt}{space 9}v26 {c |}{col 14}{res}{space 2}-1.040175{col 26}{space 2} .4395742{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.901724{col 67}{space 3}-.1786251
{txt}{space 9}v27 {c |}{col 14}{res}{space 2}-11.76719{col 26}{space 2} 2.113134{col 37}{space 1}   -5.57{col 46}{space 3}0.000{col 54}{space 4}-15.90886{col 67}{space 3}-7.625522
{txt}{space 9}v28 {c |}{col 14}{res}{space 2} .4454309{col 26}{space 2} .1990775{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0552462{col 67}{space 3} .8356156
{txt}{space 9}v29 {c |}{col 14}{res}{space 2}-2.486366{col 26}{space 2} 1.501528{col 37}{space 1}   -1.66{col 46}{space 3}0.098{col 54}{space 4}-5.429307{col 67}{space 3} .4565755
{txt}{space 9}v30 {c |}{col 14}{res}{space 2}-.3298518{col 26}{space 2} .3136594{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -.944613{col 67}{space 3} .2849093
{txt}{space 9}v31 {c |}{col 14}{res}{space 2}-.1702089{col 26}{space 2} .4815475{col 37}{space 1}   -0.35{col 46}{space 3}0.724{col 54}{space 4}-1.114025{col 67}{space 3} .7736067
{txt}{space 9}v32 {c |}{col 14}{res}{space 2} 2.548751{col 26}{space 2} 3.283165{col 37}{space 1}    0.78{col 46}{space 3}0.438{col 54}{space 4}-3.886134{col 67}{space 3} 8.983637
{txt}{space 9}v33 {c |}{col 14}{res}{space 2}-.7383498{col 26}{space 2} .3116928{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-1.349256{col 67}{space 3}-.1274431
{txt}{space 9}v34 {c |}{col 14}{res}{space 2}  .667874{col 26}{space 2} 1.600631{col 37}{space 1}    0.42{col 46}{space 3}0.676{col 54}{space 4}-2.469304{col 67}{space 3} 3.805052
{txt}{space 9}v35 {c |}{col 14}{res}{space 2}-2.055442{col 26}{space 2} .7883247{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4} -3.60053{col 67}{space 3} -.510354
{txt}{space 9}v36 {c |}{col 14}{res}{space 2} .9237073{col 26}{space 2} .3090853{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .3179113{col 67}{space 3} 1.529503
{txt}{space 9}v37 {c |}{col 14}{res}{space 2} .0465117{col 26}{space 2} .1753521{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-.2971721{col 67}{space 3} .3901955
{txt}{space 9}v38 {c |}{col 14}{res}{space 2}-.5968219{col 26}{space 2} .4232102{col 37}{space 1}   -1.41{col 46}{space 3}0.158{col 54}{space 4}-1.426299{col 67}{space 3} .2326548
{txt}{space 9}v39 {c |}{col 14}{res}{space 2}-.8650298{col 26}{space 2}  .382818{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-1.615339{col 67}{space 3}-.1147203
{txt}{space 9}v40 {c |}{col 14}{res}{space 2}-.3046104{col 26}{space 2} .3636396{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.017331{col 67}{space 3}   .40811
{txt}{space 9}v41 {c |}{col 14}{res}{space 2}  -45.048{col 26}{space 2} 26.59976{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-97.18257{col 67}{space 3} 7.086575
{txt}{space 9}v42 {c |}{col 14}{res}{space 2} -2.68869{col 26}{space 2} .8384207{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-4.331965{col 67}{space 3}-1.045416
{txt}{space 9}v43 {c |}{col 14}{res}{space 2} -1.24713{col 26}{space 2} .8064102{col 37}{space 1}   -1.55{col 46}{space 3}0.122{col 54}{space 4}-2.827665{col 67}{space 3} .3334047
{txt}{space 9}v44 {c |}{col 14}{res}{space 2}-1.573173{col 26}{space 2}   .52922{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.610425{col 67}{space 3}-.5359204
{txt}{space 9}v45 {c |}{col 14}{res}{space 2}-.7923358{col 26}{space 2} .1556316{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-1.097368{col 67}{space 3}-.4873034
{txt}{space 9}v46 {c |}{col 14}{res}{space 2}-1.459248{col 26}{space 2} .2685625{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4} -1.98562{col 67}{space 3}-.9328748
{txt}{space 9}v47 {c |}{col 14}{res}{space 2}-2.325892{col 26}{space 2} 1.659155{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-5.577776{col 67}{space 3} .9259907
{txt}{space 9}v48 {c |}{col 14}{res}{space 2}-4.015602{col 26}{space 2} 1.610876{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-7.172861{col 67}{space 3}-.8583425
{txt}{space 9}v49 {c |}{col 14}{res}{space 2}-1.291097{col 26}{space 2} .4421941{col 37}{space 1}   -2.92{col 46}{space 3}0.004{col 54}{space 4}-2.157782{col 67}{space 3}-.4244127
{txt}{space 9}v50 {c |}{col 14}{res}{space 2}-.1881063{col 26}{space 2} .2493757{col 37}{space 1}   -0.75{col 46}{space 3}0.451{col 54}{space 4}-.6768737{col 67}{space 3} .3006612
{txt}{space 9}v51 {c |}{col 14}{res}{space 2}-.6574308{col 26}{space 2} .8383297{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.300527{col 67}{space 3} .9856652
{txt}{space 9}v52 {c |}{col 14}{res}{space 2} .3471968{col 26}{space 2} .0892645{col 37}{space 1}    3.89{col 46}{space 3}0.000{col 54}{space 4} .1722416{col 67}{space 3}  .522152
{txt}{space 9}v53 {c |}{col 14}{res}{space 2} 5.336017{col 26}{space 2} .7064376{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} 3.951425{col 67}{space 3}  6.72061
{txt}{space 9}v54 {c |}{col 14}{res}{space 2} 2.403162{col 26}{space 2} 1.113307{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4}   .22112{col 67}{space 3} 4.585205
{txt}{space 9}v55 {c |}{col 14}{res}{space 2} .0119871{col 26}{space 2} .0188355{col 37}{space 1}    0.64{col 46}{space 3}0.525{col 54}{space 4}-.0249298{col 67}{space 3} .0489041
{txt}{space 9}v56 {c |}{col 14}{res}{space 2} .0091185{col 26}{space 2} .0025206{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} .0041782{col 67}{space 3} .0140588
{txt}{space 9}v57 {c |}{col 14}{res}{space 2} .0008437{col 26}{space 2} .0002251{col 37}{space 1}    3.75{col 46}{space 3}0.000{col 54}{space 4} .0004024{col 67}{space 3} .0012849
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-1.568614{col 26}{space 2} .1420363{col 37}{space 1}  -11.04{col 46}{space 3}0.000{col 54}{space 4}   -1.847{col 67}{space 3}-1.290228
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 6 2}Note: 662 failures and 35 successes completely determined.{p_end}
1.187e-13

{com}. //
. 
. 
. ********************************************************************************
. *** compare results: single vs multiple lambdas                                                          *** 
. ********************************************************************************
. 
. 
. clear all 
{txt}
{com}. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. *******
. 
. 
. lassologit v58 v1-v57, l(0.187 0.1 0.07 0.05 0.01 0.005 )
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}  57{col 31}  84.86971{col 43} 2032.33827{txt} {res}{col 56} 0.7052{txt}{col 65}{c |}{res}{col 67}All selected.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')    
{txt}  3{com}.         mat bj = e(beta)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di mreldif(bj,Bj)
{txt}  6{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  7{com}.         
.         local j = `j' + 1
{txt}  8{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3692042     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1475768     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1174313      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.7615226      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5623306      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8463987      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2896317      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5680123      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6756963      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1263267      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2511355     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1413100     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0740926     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1357520      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2074724      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0386915      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9409362      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1188070      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0804495      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0290242      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2428715      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2108562      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2349073      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4408466      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9027888     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0397313     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}     -9.1972917    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4379553      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3100552     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3223888     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1781287     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      1.7948612      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7719664     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.4714318      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0007412     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9168614      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0332753      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5860616     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8472510     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2889351     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -20.8833860    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.5559820     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1843701     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5460445     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7825324     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4498374     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.2844237     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.8191058     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2800913     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1760998     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6439888     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3538298      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3056746      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3519148      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0001970      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0089008      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007982      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5315197     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3795209     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1467913     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1157761      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.9716965      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624505      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8616386      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2847019      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5687804      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6998992      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1266214      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2524077     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1403026     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0753272     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1397350      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2117089      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0388193      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9487349      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1198214      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0807597      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0375172      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2427115      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2068938      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2329955      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4339031      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9106100     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0398751     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.2915219    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4412263      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3880733     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3254858     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1744424     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.1404243      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7596552     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5638729      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0235225     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9204137      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0396617      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5910244     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8555660     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2946441     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -26.2946608    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6143438     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2108971     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5584637     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7872504     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4543085     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3036945     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9301962     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2852256     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1810884     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6482530     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3506173      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3182776      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3767498      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0050268      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090181      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008148      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5462419     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
1.107e-06
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3828281     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1464930     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1152631      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.0509443      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624835      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8674431      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2828129      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5690493      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7092168      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1267541      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2530823     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1398791     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0761932     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1411787      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2144149      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387776      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9518412      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1200847      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0808861      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0407267      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2425665      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2053458      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2332138      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4315636      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9134605     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399226     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.7063679    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4424025      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4166123     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3266379     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1732144     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.2613304      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7539537     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5953559      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0321959     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9214947      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0418289      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5927692     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8584454     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2971972     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -29.6752760    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6357263     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2208350     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5629612     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7888484     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4557155     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3103380     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9605069     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2869584     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1829749     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6503649     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3495495      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3229071      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3848902      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0069386      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090519      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008221      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5521316     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
3.123e-07
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3849274     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1462885     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1149405      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.1058676      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624898      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8715170      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2815179      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5692255      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7157506      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1268710      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2536285     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1395466     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0769378     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1421574      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2173234      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387121      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9540473      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1202107      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809840      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0428692      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2424350      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2042520      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2341504      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4300332      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9154504     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399753     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.9948343    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4432234      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4361055     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3274366     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1723863     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.3424475      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7495143     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6162046      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0383194     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9221738      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0432446      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5939307     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8603469     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2990815     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -32.8894320    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6503958     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2277989     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5659906     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7898850     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4566204     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3147392     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9772911     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2881173     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1843068     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6520661     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3488598      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3261695      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3901642      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0082960      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090713      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008278      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5563906     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
1.216e-06
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3886895     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458813     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1143108      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2213340      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624238      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8804338      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2790769      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695447      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7301435      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1272926      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2551654     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1386273     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0789620     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1441412      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2303998      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385889      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9586597      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203123      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812351      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0466466      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420596      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2019345      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2414597      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4271052      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9194821     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401514     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6027970    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4449813      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4759820     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3292718     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1706694     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5072109      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7402659     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6576393      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0517198     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9234327      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0458969      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5962390     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8640788     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3033900     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -42.3118349    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6806297     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2428907     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5717993     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7918480     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4586183     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3235679     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0067234     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2904983     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1872684     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6562423     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3475350      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3337881      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4006392      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0112030      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091073      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008406      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5659424     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
5.749e-07
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3891032     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458322     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1142292      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2363789      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624075      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8816422      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2788092      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695782      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7321284      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1273717      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2554198     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1384808     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0792727     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1443903      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2330749      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385894      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9592432      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203128      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812716      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0470322      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420006      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2016382      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2431769      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4267556      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9199569     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401750     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6818213    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4452073      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4810318     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3295447     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1704500     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5282029      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7393075     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6628052      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0535190     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9235803      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0462026      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5965280     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8645431     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3039844     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -43.6311964    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6844659     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2448996     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5724703     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7920856     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4589164     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3247041     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0109206     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2908047     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1876723     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6568091     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3473709      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3348968      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4019885      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0115804      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091126      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008421      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5672302     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
9.391e-06

{com}. //
. 
. *******
. 
. lassologit v58 v1-v57, l(0.187 0.1 0.07 0.05 0.01 0.005 ) postl
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}  57{col 31} 114.14344{col 43} 2029.36159{txt} {res}{col 56} 0.7057{txt}{col 65}{c |}{res}{col 67}All selected.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')    
{txt}  3{com}.         mat bj = e(beta_post)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di mreldif(bj,Bj)
{txt}  6{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  7{com}.         
.         local j = `j' + 1
{txt}  8{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3692042     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1475768     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1174313      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.7615226      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5623306      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8463987      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2896317      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5680123      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6756963      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1263267      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2511355     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1413100     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0740926     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1357520      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2074724      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0386915      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9409362      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1188070      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0804495      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0290242      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2428715      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2108562      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2349073      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4408466      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9027888     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0397313     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}     -9.1972917    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4379553      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3100552     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3223888     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1781287     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      1.7948612      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7719664     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.4714318      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0007412     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9168614      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0332753      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5860616     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8472510     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2889351     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -20.8833860    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.5559820     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1843701     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5460445     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7825324     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4498374     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.2844237     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.8191058     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2800913     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1760998     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6439888     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3538298      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3056746      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3519148      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0001970      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0089008      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007982      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5315197     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3795209     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1467913     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1157761      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.9716965      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624505      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8616386      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2847019      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5687804      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.6998992      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1266214      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2524077     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1403026     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0753272     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1397350      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2117089      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0388193      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9487349      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1198214      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0807597      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0375172      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2427115      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2068938      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2329955      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4339031      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9106100     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0398751     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.2915219    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4412263      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3880733     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3254858     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1744424     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.1404243      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7596552     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5638729      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0235225     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9204137      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0396617      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5910244     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8555660     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2946441     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -26.2946608    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6143438     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2108971     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5584637     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7872504     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4543085     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3036945     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9301962     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2852256     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1810884     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6482530     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3506173      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3182776      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3767498      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0050268      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090181      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008148      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5462419     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3828281     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1464930     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1152631      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.0509443      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624835      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8674431      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2828129      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5690493      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7092168      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1267541      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2530823     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1398791     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0761932     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1411787      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2144149      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387776      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9518412      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1200847      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0808861      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0407267      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2425665      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2053458      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2332138      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4315636      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9134605     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399226     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.7063679    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4424025      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4166123     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3266379     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1732144     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.2613304      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7539537     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5953559      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0321959     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9214947      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0418289      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5927692     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8584454     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2971972     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -29.6752760    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6357263     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2208350     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5629612     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7888484     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4557155     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3103380     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9605069     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2869584     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1829749     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6503649     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3495495      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3229071      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3848902      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0069386      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090519      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008221      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5521316     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3849274     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1462885     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1149405      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.1058676      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624898      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8715170      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2815179      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5692255      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7157506      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1268710      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2536285     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1395466     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0769378     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1421574      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2173234      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0387121      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9540473      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1202107      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0809840      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0428692      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2424350      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2042520      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2341504      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4300332      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9154504     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0399753     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.9948343    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4432234      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4361055     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3274366     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1723863     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.3424475      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7495143     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6162046      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0383194     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9221738      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0432446      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5939307     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8603469     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2990815     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -32.8894320    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6503958     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2277989     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5659906     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7898850     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4566204     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3147392     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9772911     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2881173     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1843068     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6520661     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3488598      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3261695      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3901642      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0082960      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0090713      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008278      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5563906     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3886895     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458813     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1143108      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2213340      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624238      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8804338      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2790769      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695447      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7301435      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1272926      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2551654     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1386273     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0789620     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1441412      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2303998      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385889      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9586597      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203123      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812351      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0466466      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420596      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2019345      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2414597      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4271052      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9194821     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401514     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6027970    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4449813      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4759820     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3292718     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1706694     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5072109      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7402659     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6576393      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0517198     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9234327      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0458969      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5962390     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8640788     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3033900     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -42.3118349    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6806297     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2428907     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5717993     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7918480     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4586183     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3235679     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0067234     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2904983     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1872684     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6562423     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3475350      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3337881      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4006392      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0112030      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091073      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008406      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5659424     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3891032     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1458322     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1142292      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2363789      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624075      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8816422      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2788092      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695782      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7321284      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1273717      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2554198     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1384808     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0792727     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1443903      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2330749      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0385894      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9592432      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1203128      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812716      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0470322      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2420006      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2016382      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2431769      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4267556      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9199569     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0401750     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.6818213    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4452073      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4810318     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3295447     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1704500     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.5282029      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7393075     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6628052      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0535190     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9235803      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0462026      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5965280     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8645431     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3039844     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -43.6311964    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6844659     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2448996     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5724703     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7920856     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4589164     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3247041     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0109206     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2908047     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1876723     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6568091     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3473709      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3348968      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.4019885      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0115804      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091126      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008421      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5672302     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0

{com}. //
. 
. 
. *******
. 
. lassologit v58 v1-v57, l(0.1 0.07 0.05 0.01 0.005 ) nocons
{res}{txt}Obtaining solution for 5 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
.....
{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.10000{col 25}  57{col 31}  88.74683{col 43} 2169.93508{txt} {res}{col 56} 0.6825{txt}{col 65}{c |}{res}{col 67}All selected.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         di `lam'
{txt}  3{com}.         lassologit v58 v1-v57, l(`lam')  nocons   
{txt}  4{com}.         mat bj = e(beta)
{txt}  5{com}.         
.         mat Bj = B[`j',1..57]
{txt}  6{com}.         
.         di mreldif(bj,Bj)
{txt}  7{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  8{com}.         
.         local j = `j' + 1
{txt}  9{com}. 
. {c )-}
.1
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.4851011     -0.4925386
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2449784     -0.2455234
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0825617     -0.0880718
{txt}{space 15}v4 {c |}{col 21}{res}      1.8209752      2.0840451
{txt}{space 15}v5 {c |}{col 21}{res}      0.3656157      0.3643023
{txt}{space 15}v6 {c |}{col 21}{res}      0.5262786      0.5346436
{txt}{space 15}v7 {c |}{col 21}{res}      2.1290855      2.1275397
{txt}{space 15}v8 {c |}{col 21}{res}      0.4179385      0.4187404
{txt}{space 15}v9 {c |}{col 21}{res}      0.4870092      0.5012038
{txt}{space 14}v10 {c |}{col 21}{res}      0.0366128      0.0377350
{txt}{space 14}v11 {c |}{col 21}{res}     -0.1071094     -0.1093722
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3311927     -0.3315534
{txt}{space 14}v13 {c |}{col 21}{res}     -0.3444025     -0.3511038
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0543868     -0.0540243
{txt}{space 14}v15 {c |}{col 21}{res}      1.4111817      1.4373890
{txt}{space 14}v16 {c |}{col 21}{res}      0.8793343      0.8798305
{txt}{space 14}v17 {c |}{col 21}{res}      0.8872179      0.8914491
{txt}{space 14}v18 {c |}{col 21}{res}     -0.0082664     -0.0107154
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0820421     -0.0829935
{txt}{space 14}v20 {c |}{col 21}{res}      1.1830491      1.1846252
{txt}{space 14}v21 {c |}{col 21}{res}      0.1526148      0.1524219
{txt}{space 14}v22 {c |}{col 21}{res}      0.1970677      0.1957398
{txt}{space 14}v23 {c |}{col 21}{res}      2.0941038      2.1028766
{txt}{space 14}v24 {c |}{col 21}{res}      0.4084533      0.4030592
{txt}{space 14}v25 {c |}{col 21}{res}     -2.2357450     -2.2495280
{txt}{space 14}v26 {c |}{col 21}{res}     -1.1471137     -1.1444942
{txt}{space 14}v27 {c |}{col 21}{res}     -7.9723966     -8.8351671
{txt}{space 14}v28 {c |}{col 21}{res}      0.4496000      0.4549593
{txt}{space 14}v29 {c |}{col 21}{res}     -3.3817160     -3.5130457
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4913528     -0.4937369
{txt}{space 14}v31 {c |}{col 21}{res}     -0.3444158     -0.3484314
{txt}{space 14}v32 {c |}{col 21}{res}      0.9528568      1.4011186
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0277643     -1.0208192
{txt}{space 14}v34 {c |}{col 21}{res}      0.1206744      0.2150775
{txt}{space 14}v35 {c |}{col 21}{res}     -2.3404113     -2.3771540
{txt}{space 14}v36 {c |}{col 21}{res}      0.3940987      0.3975645
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1776185     -0.1731684
{txt}{space 14}v38 {c |}{col 21}{res}     -0.7348427     -0.7427547
{txt}{space 14}v39 {c |}{col 21}{res}     -0.9848220     -0.9949060
{txt}{space 14}v40 {c |}{col 21}{res}     -0.5158419     -0.5242234
{txt}{space 14}v41 {c |}{col 21}{res}    -23.4287429    -35.6539619
{txt}{space 14}v42 {c |}{col 21}{res}     -2.8371593     -2.9040098
{txt}{space 14}v43 {c |}{col 21}{res}     -1.7301252     -1.7695375
{txt}{space 14}v44 {c |}{col 21}{res}     -2.1434349     -2.1610222
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9923143     -0.9973039
{txt}{space 14}v46 {c |}{col 21}{res}     -1.8918708     -1.9000164
{txt}{space 14}v47 {c |}{col 21}{res}     -2.4240452     -2.4466338
{txt}{space 14}v48 {c |}{col 21}{res}     -3.4977466     -3.5799525
{txt}{space 14}v49 {c |}{col 21}{res}     -1.6038015     -1.6145909
{txt}{space 14}v50 {c |}{col 21}{res}     -1.2121502     -1.2255912
{txt}{space 14}v51 {c |}{col 21}{res}     -1.5874918     -1.5855446
{txt}{space 14}v52 {c |}{col 21}{res}      0.2354737      0.2348596
{txt}{space 14}v53 {c |}{col 21}{res}      4.9454544      4.9601666
{txt}{space 14}v54 {c |}{col 21}{res}      2.1864397      2.2274982
{txt}{space 14}v55 {c |}{col 21}{res}     -0.0136639     -0.0142179
{txt}{space 14}v56 {c |}{col 21}{res}      0.0086399      0.0091637
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004236      0.0004244
{txt}{hline 18}{c BT}{hline 32}
0
.07
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.4872944     -0.4925386
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2451290     -0.2455234
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0841840     -0.0880718
{txt}{space 15}v4 {c |}{col 21}{res}      1.8952799      2.0840451
{txt}{space 15}v5 {c |}{col 21}{res}      0.3653273      0.3643023
{txt}{space 15}v6 {c |}{col 21}{res}      0.5284911      0.5346436
{txt}{space 15}v7 {c |}{col 21}{res}      2.1285082      2.1275397
{txt}{space 15}v8 {c |}{col 21}{res}      0.4181841      0.4187404
{txt}{space 15}v9 {c |}{col 21}{res}      0.4907023      0.5012038
{txt}{space 14}v10 {c |}{col 21}{res}      0.0368635      0.0377350
{txt}{space 14}v11 {c |}{col 21}{res}     -0.1078024     -0.1093722
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3313784     -0.3315534
{txt}{space 14}v13 {c |}{col 21}{res}     -0.3460616     -0.3511038
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0543120     -0.0540243
{txt}{space 14}v15 {c |}{col 21}{res}      1.4154869      1.4373890
{txt}{space 14}v16 {c |}{col 21}{res}      0.8795528      0.8798305
{txt}{space 14}v17 {c |}{col 21}{res}      0.8885231      0.8914491
{txt}{space 14}v18 {c |}{col 21}{res}     -0.0088681     -0.0107154
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0823157     -0.0829935
{txt}{space 14}v20 {c |}{col 21}{res}      1.1837470      1.1846252
{txt}{space 14}v21 {c |}{col 21}{res}      0.1526102      0.1524219
{txt}{space 14}v22 {c |}{col 21}{res}      0.1966847      0.1957398
{txt}{space 14}v23 {c |}{col 21}{res}      2.0945103      2.1028766
{txt}{space 14}v24 {c |}{col 21}{res}      0.4068088      0.4030592
{txt}{space 14}v25 {c |}{col 21}{res}     -2.2398845     -2.2495280
{txt}{space 14}v26 {c |}{col 21}{res}     -1.1463133     -1.1444942
{txt}{space 14}v27 {c |}{col 21}{res}     -8.2126135     -8.8351671
{txt}{space 14}v28 {c |}{col 21}{res}      0.4511381      0.4549593
{txt}{space 14}v29 {c |}{col 21}{res}     -3.4198612     -3.5130457
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4918795     -0.4937369
{txt}{space 14}v31 {c |}{col 21}{res}     -0.3457186     -0.3484314
{txt}{space 14}v32 {c |}{col 21}{res}      1.0816563      1.4011186
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0258298     -1.0208192
{txt}{space 14}v34 {c |}{col 21}{res}      0.1483852      0.2150775
{txt}{space 14}v35 {c |}{col 21}{res}     -2.3510453     -2.3771540
{txt}{space 14}v36 {c |}{col 21}{res}      0.3953060      0.3975645
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1762879     -0.1731684
{txt}{space 14}v38 {c |}{col 21}{res}     -0.7371606     -0.7427547
{txt}{space 14}v39 {c |}{col 21}{res}     -0.9878369     -0.9949060
{txt}{space 14}v40 {c |}{col 21}{res}     -0.5180430     -0.5242234
{txt}{space 14}v41 {c |}{col 21}{res}    -25.8364048    -35.6539619
{txt}{space 14}v42 {c |}{col 21}{res}     -2.8565733     -2.9040098
{txt}{space 14}v43 {c |}{col 21}{res}     -1.7410606     -1.7695375
{txt}{space 14}v44 {c |}{col 21}{res}     -2.1486001     -2.1610222
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9938133     -0.9973039
{txt}{space 14}v46 {c |}{col 21}{res}     -1.8942449     -1.9000164
{txt}{space 14}v47 {c |}{col 21}{res}     -2.4305333     -2.4466338
{txt}{space 14}v48 {c |}{col 21}{res}     -3.5215778     -3.5799525
{txt}{space 14}v49 {c |}{col 21}{res}     -1.6068629     -1.6145909
{txt}{space 14}v50 {c |}{col 21}{res}     -1.2156608     -1.2255912
{txt}{space 14}v51 {c |}{col 21}{res}     -1.5862902     -1.5855446
{txt}{space 14}v52 {c |}{col 21}{res}      0.2352942      0.2348596
{txt}{space 14}v53 {c |}{col 21}{res}      4.9491707      4.9601666
{txt}{space 14}v54 {c |}{col 21}{res}      2.1987796      2.2274982
{txt}{space 14}v55 {c |}{col 21}{res}     -0.0138316     -0.0142179
{txt}{space 14}v56 {c |}{col 21}{res}      0.0087946      0.0091637
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004233      0.0004244
{txt}{hline 18}{c BT}{hline 32}
7.973e-07
.05
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.4887849     -0.4925386
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2452320     -0.2455234
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0852766     -0.0880718
{txt}{space 15}v4 {c |}{col 21}{res}      1.9468935      2.0840451
{txt}{space 15}v5 {c |}{col 21}{res}      0.3650985      0.3643023
{txt}{space 15}v6 {c |}{col 21}{res}      0.5300758      0.5346436
{txt}{space 15}v7 {c |}{col 21}{res}      2.1281496      2.1275397
{txt}{space 15}v8 {c |}{col 21}{res}      0.4183490      0.4187404
{txt}{space 15}v9 {c |}{col 21}{res}      0.4933662      0.5012038
{txt}{space 14}v10 {c |}{col 21}{res}      0.0370577      0.0377350
{txt}{space 14}v11 {c |}{col 21}{res}     -0.1082447     -0.1093722
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3314820     -0.3315534
{txt}{space 14}v13 {c |}{col 21}{res}     -0.3472959     -0.3511038
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0542451     -0.0540243
{txt}{space 14}v15 {c |}{col 21}{res}      1.4193483      1.4373890
{txt}{space 14}v16 {c |}{col 21}{res}      0.8796666      0.8798305
{txt}{space 14}v17 {c |}{col 21}{res}      0.8893966      0.8914491
{txt}{space 14}v18 {c |}{col 21}{res}     -0.0093174     -0.0107154
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0825036     -0.0829935
{txt}{space 14}v20 {c |}{col 21}{res}      1.1841678      1.1846252
{txt}{space 14}v21 {c |}{col 21}{res}      0.1525881      0.1524219
{txt}{space 14}v22 {c |}{col 21}{res}      0.1964178      0.1957398
{txt}{space 14}v23 {c |}{col 21}{res}      2.0953947      2.1028766
{txt}{space 14}v24 {c |}{col 21}{res}      0.4057196      0.4030592
{txt}{space 14}v25 {c |}{col 21}{res}     -2.2426535     -2.2495280
{txt}{space 14}v26 {c |}{col 21}{res}     -1.1457691     -1.1444942
{txt}{space 14}v27 {c |}{col 21}{res}     -8.3807327     -8.8351671
{txt}{space 14}v28 {c |}{col 21}{res}      0.4521842      0.4549593
{txt}{space 14}v29 {c |}{col 21}{res}     -3.4458909     -3.5130457
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4922958     -0.4937369
{txt}{space 14}v31 {c |}{col 21}{res}     -0.3465646     -0.3484314
{txt}{space 14}v32 {c |}{col 21}{res}      1.1699764      1.4011186
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0244117     -1.0208192
{txt}{space 14}v34 {c |}{col 21}{res}      0.1671287      0.2150775
{txt}{space 14}v35 {c |}{col 21}{res}     -2.3582761     -2.3771540
{txt}{space 14}v36 {c |}{col 21}{res}      0.3960468      0.3975645
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1753887     -0.1731684
{txt}{space 14}v38 {c |}{col 21}{res}     -0.7387318     -0.7427547
{txt}{space 14}v39 {c |}{col 21}{res}     -0.9898590     -0.9949060
{txt}{space 14}v40 {c |}{col 21}{res}     -0.5196346     -0.5242234
{txt}{space 14}v41 {c |}{col 21}{res}    -27.9387192    -35.6539619
{txt}{space 14}v42 {c |}{col 21}{res}     -2.8698265     -2.9040098
{txt}{space 14}v43 {c |}{col 21}{res}     -1.7486764     -1.7695375
{txt}{space 14}v44 {c |}{col 21}{res}     -2.1521161     -2.1610222
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9948193     -0.9973039
{txt}{space 14}v46 {c |}{col 21}{res}     -1.8958168     -1.9000164
{txt}{space 14}v47 {c |}{col 21}{res}     -2.4349563     -2.4466338
{txt}{space 14}v48 {c |}{col 21}{res}     -3.5376678     -3.5799525
{txt}{space 14}v49 {c |}{col 21}{res}     -1.6089610     -1.6145909
{txt}{space 14}v50 {c |}{col 21}{res}     -1.2181820     -1.2255912
{txt}{space 14}v51 {c |}{col 21}{res}     -1.5857199     -1.5855446
{txt}{space 14}v52 {c |}{col 21}{res}      0.2351745      0.2348596
{txt}{space 14}v53 {c |}{col 21}{res}      4.9518816      4.9601666
{txt}{space 14}v54 {c |}{col 21}{res}      2.2069821      2.2274982
{txt}{space 14}v55 {c |}{col 21}{res}     -0.0139418     -0.0142179
{txt}{space 14}v56 {c |}{col 21}{res}      0.0088987      0.0091637
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004233      0.0004244
{txt}{hline 18}{c BT}{hline 32}
1.970e-06
.01
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.4917929     -0.4925386
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2454594     -0.2455234
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0875028     -0.0880718
{txt}{space 15}v4 {c |}{col 21}{res}      2.0556146      2.0840451
{txt}{space 15}v5 {c |}{col 21}{res}      0.3644941      0.3643023
{txt}{space 15}v6 {c |}{col 21}{res}      0.5336423      0.5346436
{txt}{space 15}v7 {c |}{col 21}{res}      2.1276116      2.1275397
{txt}{space 15}v8 {c |}{col 21}{res}      0.4186662      0.4187404
{txt}{space 15}v9 {c |}{col 21}{res}      0.4994513      0.5012038
{txt}{space 14}v10 {c |}{col 21}{res}      0.0375686      0.0377350
{txt}{space 14}v11 {c |}{col 21}{res}     -0.1091334     -0.1093722
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3315708     -0.3315534
{txt}{space 14}v13 {c |}{col 21}{res}     -0.3502392     -0.3511038
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0540751     -0.0540243
{txt}{space 14}v15 {c |}{col 21}{res}      1.4323848      1.4373890
{txt}{space 14}v16 {c |}{col 21}{res}      0.8798055      0.8798305
{txt}{space 14}v17 {c |}{col 21}{res}      0.8910663      0.8914491
{txt}{space 14}v18 {c |}{col 21}{res}     -0.0103991     -0.0107154
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0828933     -0.0829935
{txt}{space 14}v20 {c |}{col 21}{res}      1.1846386      1.1846252
{txt}{space 14}v21 {c |}{col 21}{res}      0.1524710      0.1524219
{txt}{space 14}v22 {c |}{col 21}{res}      0.1958735      0.1957398
{txt}{space 14}v23 {c |}{col 21}{res}      2.1004955      2.1028766
{txt}{space 14}v24 {c |}{col 21}{res}      0.4035814      0.4030592
{txt}{space 14}v25 {c |}{col 21}{res}     -2.2481705     -2.2495280
{txt}{space 14}v26 {c |}{col 21}{res}     -1.1447301     -1.1444942
{txt}{space 14}v27 {c |}{col 21}{res}     -8.7398110     -8.8351671
{txt}{space 14}v28 {c |}{col 21}{res}      0.4543780      0.4549593
{txt}{space 14}v29 {c |}{col 21}{res}     -3.4993897     -3.5130457
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4933865     -0.4937369
{txt}{space 14}v31 {c |}{col 21}{res}     -0.3481241     -0.3484314
{txt}{space 14}v32 {c |}{col 21}{res}      1.3535429      1.4011186
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0214672     -1.0208192
{txt}{space 14}v34 {c |}{col 21}{res}      0.2053477      0.2150775
{txt}{space 14}v35 {c |}{col 21}{res}     -2.3732605     -2.3771540
{txt}{space 14}v36 {c |}{col 21}{res}      0.3973074      0.3975645
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1736026     -0.1731684
{txt}{space 14}v38 {c |}{col 21}{res}     -0.7419366     -0.7427547
{txt}{space 14}v39 {c |}{col 21}{res}     -0.9939007     -0.9949060
{txt}{space 14}v40 {c |}{col 21}{res}     -0.5232203     -0.5242234
{txt}{space 14}v41 {c |}{col 21}{res}    -33.8430632    -35.6539619
{txt}{space 14}v42 {c |}{col 21}{res}     -2.8970629     -2.9040098
{txt}{space 14}v43 {c |}{col 21}{res}     -1.7651023     -1.7695375
{txt}{space 14}v44 {c |}{col 21}{res}     -2.1592433     -2.1610222
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9968151     -0.9973039
{txt}{space 14}v46 {c |}{col 21}{res}     -1.8991031     -1.9000164
{txt}{space 14}v47 {c |}{col 21}{res}     -2.4442002     -2.4466338
{txt}{space 14}v48 {c |}{col 21}{res}     -3.5710462     -3.5799525
{txt}{space 14}v49 {c |}{col 21}{res}     -1.6134066     -1.6145909
{txt}{space 14}v50 {c |}{col 21}{res}     -1.2239399     -1.2255912
{txt}{space 14}v51 {c |}{col 21}{res}     -1.5854213     -1.5855446
{txt}{space 14}v52 {c |}{col 21}{res}      0.2349260      0.2348596
{txt}{space 14}v53 {c |}{col 21}{res}      4.9582760      4.9601666
{txt}{space 14}v54 {c |}{col 21}{res}      2.2233656      2.2274982
{txt}{space 14}v55 {c |}{col 21}{res}     -0.0141615     -0.0142179
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091099      0.0091637
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004241      0.0004244
{txt}{hline 18}{c BT}{hline 32}
1.745e-06
.005
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.4921667     -0.4925386
{txt}{space 15}v2 {c |}{col 21}{res}     -0.2454910     -0.2455234
{txt}{space 15}v3 {c |}{col 21}{res}     -0.0877865     -0.0880718
{txt}{space 15}v4 {c |}{col 21}{res}      2.0697642      2.0840451
{txt}{space 15}v5 {c |}{col 21}{res}      0.3644005      0.3643023
{txt}{space 15}v6 {c |}{col 21}{res}      0.5341369      0.5346436
{txt}{space 15}v7 {c |}{col 21}{res}      2.1275720      2.1275397
{txt}{space 15}v8 {c |}{col 21}{res}      0.4187034      0.4187404
{txt}{space 15}v9 {c |}{col 21}{res}      0.5003132      0.5012038
{txt}{space 14}v10 {c |}{col 21}{res}      0.0376495      0.0377350
{txt}{space 14}v11 {c |}{col 21}{res}     -0.1092516     -0.1093722
{txt}{space 14}v12 {c |}{col 21}{res}     -0.3315645     -0.3315534
{txt}{space 14}v13 {c |}{col 21}{res}     -0.3506647     -0.3511038
{txt}{space 14}v14 {c |}{col 21}{res}     -0.0540502     -0.0540243
{txt}{space 14}v15 {c |}{col 21}{res}      1.4347842      1.4373890
{txt}{space 14}v16 {c |}{col 21}{res}      0.8798177      0.8798305
{txt}{space 14}v17 {c |}{col 21}{res}      0.8912594      0.8914491
{txt}{space 14}v18 {c |}{col 21}{res}     -0.0105549     -0.0107154
{txt}{space 14}v19 {c |}{col 21}{res}     -0.0829434     -0.0829935
{txt}{space 14}v20 {c |}{col 21}{res}      1.1846386      1.1846252
{txt}{space 14}v21 {c |}{col 21}{res}      0.1524477      0.1524219
{txt}{space 14}v22 {c |}{col 21}{res}      0.1958065      0.1957398
{txt}{space 14}v23 {c |}{col 21}{res}      2.1016207      2.1028766
{txt}{space 14}v24 {c |}{col 21}{res}      0.4033197      0.4030592
{txt}{space 14}v25 {c |}{col 21}{res}     -2.2488503     -2.2495280
{txt}{space 14}v26 {c |}{col 21}{res}     -1.1446114     -1.1444942
{txt}{space 14}v27 {c |}{col 21}{res}     -8.7871780     -8.8351671
{txt}{space 14}v28 {c |}{col 21}{res}      0.4546666      0.4549593
{txt}{space 14}v29 {c |}{col 21}{res}     -3.5062056     -3.5130457
{txt}{space 14}v30 {c |}{col 21}{res}     -0.4935570     -0.4937369
{txt}{space 14}v31 {c |}{col 21}{res}     -0.3483001     -0.3484314
{txt}{space 14}v32 {c |}{col 21}{res}      1.3772375      1.4011186
{txt}{space 14}v33 {c |}{col 21}{res}     -1.0211339     -1.0208192
{txt}{space 14}v34 {c |}{col 21}{res}      0.2102031      0.2150775
{txt}{space 14}v35 {c |}{col 21}{res}     -2.3751966     -2.3771540
{txt}{space 14}v36 {c |}{col 21}{res}      0.3974388      0.3975645
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1733847     -0.1731684
{txt}{space 14}v38 {c |}{col 21}{res}     -0.7423444     -0.7427547
{txt}{space 14}v39 {c |}{col 21}{res}     -0.9944034     -0.9949060
{txt}{space 14}v40 {c |}{col 21}{res}     -0.5237158     -0.5242234
{txt}{space 14}v41 {c |}{col 21}{res}    -34.7371328    -35.6539619
{txt}{space 14}v42 {c |}{col 21}{res}     -2.9005290     -2.9040098
{txt}{space 14}v43 {c |}{col 21}{res}     -1.7673008     -1.7695375
{txt}{space 14}v44 {c |}{col 21}{res}     -2.1601333     -2.1610222
{txt}{space 14}v45 {c |}{col 21}{res}     -0.9970601     -0.9973039
{txt}{space 14}v46 {c |}{col 21}{res}     -1.8995527     -1.9000164
{txt}{space 14}v47 {c |}{col 21}{res}     -2.4454094     -2.4466338
{txt}{space 14}v48 {c |}{col 21}{res}     -3.5754614     -3.5799525
{txt}{space 14}v49 {c |}{col 21}{res}     -1.6139955     -1.6145909
{txt}{space 14}v50 {c |}{col 21}{res}     -1.2247530     -1.2255912
{txt}{space 14}v51 {c |}{col 21}{res}     -1.5854749     -1.5855446
{txt}{space 14}v52 {c |}{col 21}{res}      0.2348931      0.2348596
{txt}{space 14}v53 {c |}{col 21}{res}      4.9592057      4.9601666
{txt}{space 14}v54 {c |}{col 21}{res}      2.2254281      2.2274982
{txt}{space 14}v55 {c |}{col 21}{res}     -0.0141894     -0.0142179
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091367      0.0091637
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004242      0.0004244
{txt}{hline 18}{c BT}{hline 32}
6.211e-07

{com}. //
. 
. 
. *******
. 
. lassologit v58 v1-v57, l(0.187 0.1 0.07 0.05 0.01 0.005 ) nostd
{res}{txt}Obtaining solution for 6 lambdas
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
......
{res}
{txt}  Knot{c |}  ID     Lambda    s      L1-Norm     EBIC{col 55}Pseudo-R2 {c |} Entered/removed
{hline 6}{c +}{hline 57}{c +}{hline 16}
{res}     1{txt}{col 7}{c |}{res}   1{col 13}   0.18700{col 25}  57{col 31}  76.35095{col 43} 2033.29359{txt} {res}{col 56} 0.7051{txt}{col 65}{c |}{res}{col 67}All selected.
{txt}Use 'long' option for full output. 
Type e.g. '{stata lassologit, lic(ebic)}' to run the model selected by EBIC.

{com}. mat B = e(betas)
{txt}
{com}. 
. 
. local j = 1
{txt}
{com}. foreach lam of numlist 0.187 0.1 0.07 0.05 0.01 0.005 {c -(}
{txt}  2{com}.  
.         lassologit v58 v1-v57, l(`lam')  nostd  
{txt}  3{com}.         mat bj = e(beta)
{txt}  4{com}.         
.         mat Bj = B[`j',1..58]
{txt}  5{com}.         
.         di mreldif(bj,Bj)
{txt}  6{com}.         
.         assert mreldif(bj,Bj)<0.001
{txt}  7{com}.         
.         local j = `j' + 1
{txt}  8{com}. 
. {c )-}
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3772540     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1441315     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1177249      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      1.8771657      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5612495      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8603689      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2711949      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5691188      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7094609      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1250813      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2377083     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1393837     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0631745     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1399901      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.1388380      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0198531      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9478483      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1143533      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812018      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0304603      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2410701      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2048158      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2022160      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4342954      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9044122     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0062433     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -10.9368136    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4284554      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.1706377     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3168594     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1440383     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      0.8242503      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7923760     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.2327143      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -1.9376364     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.8900088      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0270031      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5545343     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8292650     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2660628     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -13.1043270    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.5561701     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1160007     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5266782     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7843451     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4593781     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -1.9057193     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.7161433     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2409975     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1662521     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.5260068     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3527609      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.2695373      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.1899234      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0072607      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0093221      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007584      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5501034     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
0
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3830928     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1449149     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1160540      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.0418885      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5620736      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8702596      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2747818      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5692046      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7210833      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1258645      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2455863     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1392746     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0701030     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1422108      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.1740031      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0281124      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9534830      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1172816      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0811547      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0376485      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2415090      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2032166      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2158773      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4303135      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9102800     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0204751     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.3085482    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4356893      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3063799     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3231768     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1553898     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      1.5769808      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7782225     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.4301468      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -1.9904146     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9050414      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0357909      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5731219     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8456769     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2834937     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -17.6515565    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6148943     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1721013     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5471917     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7883952     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4598877     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.0803223     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.8821946     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2632038     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1757762     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.5794687     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3499257      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.2997445      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.2900541      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0092604      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0092606      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007878      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5567476     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
.00003342
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3851267     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1451679     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1154504      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.1028063      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5623271      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8737045      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2758143      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5692861      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7250083      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1261635      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2485116     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1392430     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0726170     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1429668      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.1864904      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0313140      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9555240      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1184310      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0811292      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0407651      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2417003      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2026886      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2208514      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4289943      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9126173     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0257153     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.4403388    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4382951      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3576032     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3252861     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1596873     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      1.8557287      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7707121     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5004727      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0089184     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9104310      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0389874      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5800378     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8515653     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2895969     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -20.4635763    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6360105     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.1927796     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5548544     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7897750     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4599148     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.1487047     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9354971     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2711763     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1791854     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6001490     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3489712      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3098621      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3247131      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0099854      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0092344      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0007995      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5592981     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
.00003374
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3864940     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1453332     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1150569      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.1445336      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624699      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8760205      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2764441      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5693584      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7275171      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1263784      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2504822     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1392026     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0743595     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1434643      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.1951816      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0334792      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9569173      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1191765      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0811192      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0430345      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2418269      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2023333      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2242959      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4281418      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9143920     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0293861     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.5293160    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4401039      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.3931347     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3266341     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1626622     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.0477182      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7642905     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.5479697      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0214345     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9140997      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0411640      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5847763     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8555213     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.2936958     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -23.3016757    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6504461     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2070749     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5601572     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7906669     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4598105     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.1968567     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -3.9673806     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2766125     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1815076     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6148195     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3483640      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3165753      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3476322      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0104929      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0092123      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008086      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5611761     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
.00003459
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3891281     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1456720     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1143491      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2296742      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5625116      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8810905      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2777820      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695664      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7322719      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1270418      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2544383     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1387530     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0783143     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1444259      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2204463      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0375365      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9595549      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1202339      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812165      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0472779      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2419752      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2015264      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2357410      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4266342      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9191741     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0377420     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.7139389    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4442228      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4673861     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3290646     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1687352     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.4454264      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7438147     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6438236      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0478976     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9217268      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0455504      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5944083     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8632104     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3022050     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -37.8521421    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6808343     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2381390     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5709656     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7921238     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4591272     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.2990524     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0061915     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2880256     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1865470     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6479879     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3473810      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3310054      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3921011      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0116641      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091372      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008354      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5664724     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
.00003607
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v1 {c |}{col 21}{res}     -0.3893552     -0.3895185
{txt}{space 15}v2 {c |}{col 21}{res}     -0.1457217     -0.1457768
{txt}{space 15}v3 {c |}{col 21}{res}      0.1142519      0.1141402
{txt}{space 15}v4 {c |}{col 21}{res}      2.2405056      2.2515195
{txt}{space 15}v5 {c |}{col 21}{res}      0.5624562      0.5623843
{txt}{space 15}v6 {c |}{col 21}{res}      0.8819628      0.8829526
{txt}{space 15}v7 {c |}{col 21}{res}      2.2781006      2.2785173
{txt}{space 15}v8 {c |}{col 21}{res}      0.5695930      0.5696134
{txt}{space 15}v9 {c |}{col 21}{res}      0.7331657      0.7342982
{txt}{space 14}v10 {c |}{col 21}{res}      0.1272281      0.1274624
{txt}{space 14}v11 {c |}{col 21}{res}     -0.2550370     -0.2557123
{txt}{space 14}v12 {c |}{col 21}{res}     -0.1385602     -0.1383133
{txt}{space 14}v13 {c |}{col 21}{res}     -0.0789387     -0.0796125
{txt}{space 14}v14 {c |}{col 21}{res}      0.1445427      0.1446573
{txt}{space 14}v15 {c |}{col 21}{res}      1.2273949      1.2362000
{txt}{space 14}v16 {c |}{col 21}{res}      1.0380440      1.0385899
{txt}{space 14}v17 {c |}{col 21}{res}      0.9597458      0.9598609
{txt}{space 14}v18 {c |}{col 21}{res}      0.1202818      0.1203139
{txt}{space 14}v19 {c |}{col 21}{res}      0.0812600      0.0813108
{txt}{space 14}v20 {c |}{col 21}{res}      1.0474428      1.0474191
{txt}{space 14}v21 {c |}{col 21}{res}      0.2419609      0.2419341
{txt}{space 14}v22 {c |}{col 21}{res}      0.2014182      0.2013226
{txt}{space 14}v23 {c |}{col 21}{res}      2.2397989      2.2452367
{txt}{space 14}v24 {c |}{col 21}{res}      0.4265034      0.4263957
{txt}{space 14}v25 {c |}{col 21}{res}     -1.9198353     -1.9204165
{txt}{space 14}v26 {c |}{col 21}{res}     -1.0389453     -1.0401748
{txt}{space 14}v27 {c |}{col 21}{res}    -11.7399352    -11.7671884
{txt}{space 14}v28 {c |}{col 21}{res}      0.4448231      0.4454309
{txt}{space 14}v29 {c |}{col 21}{res}     -2.4768640     -2.4863656
{txt}{space 14}v30 {c |}{col 21}{res}     -0.3294236     -0.3298518
{txt}{space 14}v31 {c |}{col 21}{res}     -0.1694733     -0.1702089
{txt}{space 14}v32 {c |}{col 21}{res}      2.4967667      2.5487514
{txt}{space 14}v33 {c |}{col 21}{res}     -0.7408287     -0.7383498
{txt}{space 14}v34 {c |}{col 21}{res}      0.6558454      0.6678740
{txt}{space 14}v35 {c |}{col 21}{res}     -2.0515977     -2.0554420
{txt}{space 14}v36 {c |}{col 21}{res}      0.9227147      0.9237073
{txt}{space 14}v37 {c |}{col 21}{res}      0.0460473      0.0465117
{txt}{space 14}v38 {c |}{col 21}{res}     -0.5956120     -0.5968219
{txt}{space 14}v39 {c |}{col 21}{res}     -0.8641189     -0.8650298
{txt}{space 14}v40 {c |}{col 21}{res}     -0.3033847     -0.3046104
{txt}{space 14}v41 {c |}{col 21}{res}    -41.4240663    -45.0479990
{txt}{space 14}v42 {c |}{col 21}{res}     -2.6847776     -2.6886902
{txt}{space 14}v43 {c |}{col 21}{res}     -1.2425510     -1.2471302
{txt}{space 14}v44 {c |}{col 21}{res}     -1.5721326     -1.5731726
{txt}{space 14}v45 {c |}{col 21}{res}     -0.7922343     -0.7923358
{txt}{space 14}v46 {c |}{col 21}{res}     -1.4591350     -1.4592476
{txt}{space 14}v47 {c |}{col 21}{res}     -2.3123739     -2.3258925
{txt}{space 14}v48 {c |}{col 21}{res}     -4.0098496     -4.0156018
{txt}{space 14}v49 {c |}{col 21}{res}     -1.2895473     -1.2910971
{txt}{space 14}v50 {c |}{col 21}{res}     -0.1873034     -0.1881063
{txt}{space 14}v51 {c |}{col 21}{res}     -0.6526788     -0.6574308
{txt}{space 14}v52 {c |}{col 21}{res}      0.3472904      0.3471968
{txt}{space 14}v53 {c |}{col 21}{res}      5.3333699      5.3360172
{txt}{space 14}v54 {c |}{col 21}{res}      2.3975863      2.4031624
{txt}{space 14}v55 {c |}{col 21}{res}      0.0118290      0.0119871
{txt}{space 14}v56 {c |}{col 21}{res}      0.0091264      0.0091185
{txt}{space 14}v57 {c |}{col 21}{res}      0.0008397      0.0008437
{txt}{space 12}_cons {c |}{col 21}{res}     -1.5675032     -1.5686144
{txt}{hline 18}{c BT}{hline 32}
.00003689

{com}. //
. 
. 
{txt}end of do-file

{com}. 
. do "cs_cvlassologit.do"
{txt}
{com}. 
. clear all 
{txt}
{com}. 
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. gen myf = 1
{txt}
{com}. replace myf = 2 if _n > 25
{txt}(72 real changes made)

{com}. replace myf = 3 if _n > 50
{txt}(47 real changes made)

{com}. replace myf = 4 if _n > 75
{txt}(22 real changes made)

{com}. 
. local tol = 0.01
{txt}
{com}. 
. ********************************************************************************
. *** deviance                                                                                                                             ***
. ********************************************************************************
. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance)  lambdan 
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.0825447 {space 3} {res} .97441364  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res} 1.8496369 {space 3} {res} .77513024  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.08254581596245 \ 2.01772455876113 \ 2.01521038363898 \ 1.85552483852628 \ 1.84971975634164 )
{txt}
{com}. mat Gcvsd = ( 0.983003948645934 \ 1.01362212332398 \ 1.01620614729319 \ 0.891321820785998 \ 0.769254466742782 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. // >
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nocons lambdan storeest(d)
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 1.8870548 {space 3} {res} .80058934  ^
{txt}         4{c |} {space 3} {res}       .05 {space 3} {res}  1.712839 {space 3} {res} .82969722  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 1.88703159578689 \ 1.84295622517937 \ 1.84604832914781 \ 1.71315139941324 \ 2.06072320470385 )
{txt}
{com}. mat Gcvsd = ( 0.807683652389135 \ 0.890207093045443 \ 0.89735498493324 \ 0.831483091061569 \ 0.885306606625466 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.05
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.05
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. //ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nostd lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.1712806 {space 3} {res} .97214791  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res} 1.8633088 {space 3} {res} .77838717  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.17122209560962 \ 2.07796719364886 \ 2.06600265938377 \ 1.92873373066042 \ 1.86328278602207 )
{txt}
{com}. mat Gcvsd = ( 0.976586472178121 \ 0.994800183102049 \ 1.00164196360505 \ 0.919465328924813 \ 0.772522333205428 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(deviance) nocons nostd lambdan 
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} 2.0462999 {space 3} {res}  .8777467  ^
{txt}         4{c |} {space 3} {res}       .05 {space 3} {res} 1.7732799 {space 3} {res}  .8121304  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 2.04631386499165 \ 1.96612060457599 \ 1.95374855866588 \ 1.77310874352822 \ 2.07059117964739 )
{txt}
{com}. mat Gcvsd = ( 0.881443394729349 \ 0.910706849371597 \ 0.915312643481268 \ 0.812051490921067 \ 0.890972059994161 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.05
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.05
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. ********************************************************************************
. *** classification                                                                                                                       ***
. ********************************************************************************
. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) lambdan  
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .32989691 {space 3} {res} .23273587  *^
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.329896907216495 \ 0.422680412371134 \ 0.422680412371134 \ 0.422680412371134 \ 0.371134020618557 )
{txt}
{com}. mat Gcvsd = ( 0.233921440752119 \ 0.21546802804412 \ 0.21546802804412 \ 0.219888311955527 \ 0.175517201389091 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.2
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.2
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nocons lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .32989691 {space 3} {res} .23273587  *^
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm =( 0.329896907216495 \ 0.391752577319588 \ 0.391752577319588 \ 0.422680412371134 \ 0.43298969072165 )
{txt}
{com}. mat Gcvsd = ( 0.233921440752119 \ 0.21676631645944 \ 0.21676631645944 \ 0.210302540152146 \ 0.201492992636001 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.2
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.2
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. //ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nostd lambdan
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .48453608 {space 3} {res} .19658288  ^
{txt}         5{c |} {space 3} {res}      .001 {space 3} {res}  .3814433 {space 3} {res} .17692482  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.484536082474227 \ 0.443298969072165 \ 0.43298969072165 \ 0.43298969072165 \ 0.381443298969072 )
{txt}
{com}. mat Gcvsd = ( 0.195557378626205 \ 0.212481204585373 \ 0.215980406627655 \ 0.215980406627655 \ 0.176370943087664 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.001
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.001
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. // ok
. cvlassologit ybin lcavol-pgg45, foldv(myf) l(.2 0.11 .1 0.05 0.001) lossm(class) nocons nostd lambdan  
{txt}Use user-specified fold variable.
{res}{txt}K-fold cross-validation with 4 folds.
Fold {res}1 2 3 4 
{txt}          {c |} {space 3} {txt}  Lambda/N {space 3} {txt}Missclass. {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}        .2 {space 3} {res} .45360825 {space 3} {res} .21117543  ^
{txt}         2{c |} {space 3} {res}       .11 {space 3} {res} .41237113 {space 3} {res} .21614273  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. mat Scvm = e(mloss)'
{txt}
{com}. mat Scvsd = e(cvsd)'
{txt}
{com}. mat Gcvm = ( 0.45360824742268 \ 0.412371134020619 \ 0.422680412371134 \ 0.422680412371134 \ 0.43298969072165 )
{txt}
{com}. mat Gcvsd = ( 0.209411194781137 \ 0.215428563830343 \ 0.21546802804412 \ 0.212254330138366 \ 0.201492992636001 )
{txt}
{com}. assert mreldif(Scvm,Gcvm)<`tol'
{txt}
{com}. assert mreldif(Scvsd,Gcvsd)<`tol'
{txt}
{com}. // > cv$lambda.min
. // [1] 0.11
. // > cv$lambda.1se
. // [1] 0.2
. assert e(lopt)==0.11
{txt}
{com}. assert e(lse)==0.2
{txt}
{com}. 
. 
. ********************************************************************************
. *** plotting                                                                 ***
. ******************************************************************************** 
. 
. clear all 
{txt}
{com}. 
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 2
{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45 , plotcv nfol(3)
{res}{txt}K-fold cross-validation with 3 folds.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         7{c |} {space 3} {res} 10.321959 {space 3} {res} 1.0836119 {space 3} {res}  .0729201  ^
{txt}        16{c |} {space 3} {res}  2.902296 {space 3} {res} 1.0012718 {space 3} {res} .09486216  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
{res}{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45 , plotcv plotopt(legend(off)) nfol(3)
{res}{txt}K-fold cross-validation with 3 folds.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}        24{c |} {space 3} {res} .93960601 {space 3} {res} .83771325 {space 3} {res}  .0426952  ^
{txt}        43{c |} {space 3} {res} .06451794 {space 3} {res} .79605024 {space 3} {res}  .0421559  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.
{res}{txt}
{com}. 
. 
. ********************************************************************************
. *** stratified option                                                        ***
. ******************************************************************************** 
. 
. clear all 
{txt}
{com}. 
. insheet using prostate.data, clear
{txt}(11 vars, 97 obs)

{com}. 
. gen ybin = lpsa > 3
{txt}
{com}. 
. gen f = ceil(rpoisson(3))+1
{txt}
{com}. 
. cvlassologit ybin lcavol-pgg45, tabfold strat

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        14         14         14         14         14 {txt}{c |}{res}        70 
{txt}         1 {c |}{res}         5          5          6          5          6 {txt}{c |}{res}        27 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        19         19         20         19         20 {txt}{c |}{res}        97 

{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 8.7682899 {space 3} {res} .84588346 {space 3} {res} .07697792  ^
{txt}        17{c |} {space 3} {res} 2.8386966 {space 3} {res} .78182455 {space 3} {res} .06702653  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
. cvlassologit ybin lcavol-pgg45, tabfold 

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}         9         14         14         15         18 {txt}{c |}{res}        70 
{txt}         1 {c |}{res}        10          5          6          4          2 {txt}{c |}{res}        27 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        19         19         20         19         20 {txt}{c |}{res}        97 

{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         7{c |} {space 3} {res} 11.624222 {space 3} {res} .89063868 {space 3} {res} .14074915  ^
{txt}        19{c |} {space 3} {res} 2.1412629 {space 3} {res} .77447622 {space 3} {res} .11883546  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
. cvlassologit ybin lcavol-pgg45 [fw=f], tabfold strat

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        53         57         58         51         62 {txt}{c |}{res}       281 
{txt}         1 {c |}{res}        19         20         18         23         24 {txt}{c |}{res}       104 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        72         77         76         74         86 {txt}{c |}{res}       385 

{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}        11{c |} {space 3} {res}  6.724659 {space 3} {res}  .6831891 {space 3} {res} .03821307  ^
{txt}        19{c |} {space 3} {res} 2.1770798 {space 3} {res}  .6326249 {space 3} {res} .06032468  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}.  
. cvlassologit ybin lcavol-pgg45 [fw=f], tabfold 

           {txt}{c |}                          Fold
      ybin {c |}         1          2          3          4          5 {c |}     Total
{hline 11}{c +}{hline 55}{c +}{hline 10}
         0 {c |}{res}        50         64         52         56         59 {txt}{c |}{res}       281 
{txt}         1 {c |}{res}        27         10         25         21         21 {txt}{c |}{res}       104 
{txt}{hline 11}{c +}{hline 55}{c +}{hline 10}
     Total {c |}{res}        77         74         77         77         80 {txt}{c |}{res}       385 

{txt}K-fold cross-validation with 5 folds.
Fold {res}1 2 3 4 5 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}  Deviance {space 3} {txt}  St. err.
{hline 10}{c +}{hline 45}
{txt}         9{c |} {space 3} {res} 8.9149569 {space 3} {res} .73945009 {space 3} {res} .04355201  ^
{txt}        15{c |} {space 3} {res} 3.8262409 {space 3} {res}  .6983655 {space 3} {res} .06085468  *
{txt}* lopt = the lambda that minimizes loss measure.
  Run model: {stata cvlassologit, lopt}
^ lse = largest lambda for which MSPE is within one standard error of the minimum loss.
  Run model: {stata cvlassologit, lse}
  Use 'long' option for long output.

{com}. 
{txt}end of do-file

{com}. 
. do "cs_rlassologit.do"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57 
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0749266      0.0912021
{txt}{space 15}v5 {c |}{col 21}{res}      0.3596487      0.6051171
{txt}{space 15}v6 {c |}{col 21}{res}      0.3968811      0.8601872
{txt}{space 15}v7 {c |}{col 21}{res}      1.8324478      2.4925591
{txt}{space 15}v8 {c |}{col 21}{res}      0.4097197      0.6151101
{txt}{space 15}v9 {c |}{col 21}{res}      0.2989688      0.7911203
{txt}{space 14}v16 {c |}{col 21}{res}      0.4352628      1.0098055
{txt}{space 14}v17 {c |}{col 21}{res}      0.4123384      1.0017585
{txt}{space 14}v18 {c |}{col 21}{res}      0.1799411      0.1373583
{txt}{space 14}v19 {c |}{col 21}{res}      0.0606173      0.0840006
{txt}{space 14}v20 {c |}{col 21}{res}      0.2312694      1.2761553
{txt}{space 14}v21 {c |}{col 21}{res}      0.2507944      0.1657248
{txt}{space 14}v22 {c |}{col 21}{res}      0.0931573      0.3509021
{txt}{space 14}v23 {c |}{col 21}{res}      1.3765935      2.2160690
{txt}{space 14}v24 {c |}{col 21}{res}      0.4144726      0.5437184
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4271099     -1.8968453
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1956611     -0.9797774
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0735277    -11.9614455
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1072033     -0.8894005
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1321892     -0.0846260
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0080273     -0.8928053
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2521978     -2.7696321
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0172905     -1.7524299
{txt}{space 14}v45 {c |}{col 21}{res}     -0.1889959     -0.7206971
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2115831     -1.5865996
{txt}{space 14}v49 {c |}{col 21}{res}     -0.0386795     -1.1858998
{txt}{space 14}v52 {c |}{col 21}{res}      0.4026746      0.4040957
{txt}{space 14}v53 {c |}{col 21}{res}      3.0779711      5.7620686
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007819      0.0118270
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004207      0.0004501
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6574515     -1.7102200
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.06680107
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}728870.19
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file
{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57 
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0749266      0.0912021
{txt}{space 15}v5 {c |}{col 21}{res}      0.3596487      0.6051171
{txt}{space 15}v6 {c |}{col 21}{res}      0.3968811      0.8601872
{txt}{space 15}v7 {c |}{col 21}{res}      1.8324478      2.4925591
{txt}{space 15}v8 {c |}{col 21}{res}      0.4097197      0.6151101
{txt}{space 15}v9 {c |}{col 21}{res}      0.2989688      0.7911203
{txt}{space 14}v16 {c |}{col 21}{res}      0.4352628      1.0098055
{txt}{space 14}v17 {c |}{col 21}{res}      0.4123384      1.0017585
{txt}{space 14}v18 {c |}{col 21}{res}      0.1799411      0.1373583
{txt}{space 14}v19 {c |}{col 21}{res}      0.0606173      0.0840006
{txt}{space 14}v20 {c |}{col 21}{res}      0.2312694      1.2761553
{txt}{space 14}v21 {c |}{col 21}{res}      0.2507944      0.1657248
{txt}{space 14}v22 {c |}{col 21}{res}      0.0931573      0.3509021
{txt}{space 14}v23 {c |}{col 21}{res}      1.3765935      2.2160690
{txt}{space 14}v24 {c |}{col 21}{res}      0.4144726      0.5437184
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4271099     -1.8968453
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1956611     -0.9797774
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0735277    -11.9614455
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1072033     -0.8894005
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1321892     -0.0846260
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0080273     -0.8928053
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2521978     -2.7696321
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0172905     -1.7524299
{txt}{space 14}v45 {c |}{col 21}{res}     -0.1889959     -0.7206971
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2115831     -1.5865996
{txt}{space 14}v49 {c |}{col 21}{res}     -0.0386795     -1.1858998
{txt}{space 14}v52 {c |}{col 21}{res}      0.4026746      0.4040957
{txt}{space 14}v53 {c |}{col 21}{res}      3.0779711      5.7620686
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007819      0.0118270
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004207      0.0004501
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6574515     -1.7102200
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.06680107
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}728870.19
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. 
. clear all 
{txt}
{com}. 
. cap cd "C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. cap cd "/home/achim/Dropbox/StataLasso/lassoLogit/"
{txt}
{com}.  cap cd "C:\Users\achim\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. adopath + "`c(pwd)'"
{txt}  [1]  (BASE)      "{res}C:\Program Files (x86)\Stata14\ado\base/{txt}"
  [2]  (SITE)      "{res}C:\Program Files (x86)\Stata14\ado\site/{txt}"
  [3]              "{res}.{txt}"
  [4]  (PERSONAL)  "{res}c:\ado\personal/{txt}"
  [5]  (PLUS)      "{res}c:\ado\plus/{txt}"
  [6]  (OLDPLACE)  "{res}c:\ado/{txt}"
  [7]              "{res}C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit{txt}"

{com}. 
. which lassologit
{txt}.\lassologit.ado
{res}*! lassologit (v0.1)
*! last edited: 12apr2019
*! authors: aa/ms
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57 
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0091789     -0.1375178
{txt}{space 15}v3 {c |}{col 21}{res}      0.1025406      0.0920627
{txt}{space 15}v4 {c |}{col 21}{res}      0.0221395      2.2734696
{txt}{space 15}v5 {c |}{col 21}{res}      0.4389195      0.5815785
{txt}{space 15}v6 {c |}{col 21}{res}      0.4471062      0.8510696
{txt}{space 15}v7 {c |}{col 21}{res}      2.1037234      2.4185398
{txt}{space 15}v8 {c |}{col 21}{res}      0.4929477      0.6090276
{txt}{space 15}v9 {c |}{col 21}{res}      0.3702009      0.6824947
{txt}{space 14}v10 {c |}{col 21}{res}      0.0396004      0.1074748
{txt}{space 14}v16 {c |}{col 21}{res}      0.4818871      0.9886430
{txt}{space 14}v17 {c |}{col 21}{res}      0.5497209      0.9748959
{txt}{space 14}v18 {c |}{col 21}{res}      0.2308251      0.1859124
{txt}{space 14}v19 {c |}{col 21}{res}      0.0681702      0.0706948
{txt}{space 14}v20 {c |}{col 21}{res}      0.3148793      1.2270534
{txt}{space 14}v21 {c |}{col 21}{res}      0.2261778      0.1695390
{txt}{space 14}v22 {c |}{col 21}{res}      0.1615924      0.3394076
{txt}{space 14}v23 {c |}{col 21}{res}      1.6590242      2.1588763
{txt}{space 14}v24 {c |}{col 21}{res}      0.5110243      0.4564956
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6927475     -2.0024763
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3368259     -0.8946619
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1699904    -11.4558961
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2908236     -0.7211620
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1192676      0.0134266
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1306164     -0.8490996
{txt}{space 14}v41 {c |}{col 21}{res}     -0.0243204    -42.2964812
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4841356     -2.7975455
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1337821     -1.2348110
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1535065     -1.6578914
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3128928     -0.7191291
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4483164     -1.3578409
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2230745     -2.3414241
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2165857     -4.1763659
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3577761     -1.2605573
{txt}{space 14}v52 {c |}{col 21}{res}      0.4574917      0.3666409
{txt}{space 14}v53 {c |}{col 21}{res}      3.8591328      5.5424212
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014729      0.0104922
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004758      0.0008072
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6815994     -1.6205887
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.22307452
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}388225.23
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57 , lambdan
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0091789     -0.1375178
{txt}{space 15}v3 {c |}{col 21}{res}      0.1025406      0.0920627
{txt}{space 15}v4 {c |}{col 21}{res}      0.0221395      2.2734696
{txt}{space 15}v5 {c |}{col 21}{res}      0.4389195      0.5815785
{txt}{space 15}v6 {c |}{col 21}{res}      0.4471062      0.8510696
{txt}{space 15}v7 {c |}{col 21}{res}      2.1037234      2.4185398
{txt}{space 15}v8 {c |}{col 21}{res}      0.4929477      0.6090276
{txt}{space 15}v9 {c |}{col 21}{res}      0.3702009      0.6824947
{txt}{space 14}v10 {c |}{col 21}{res}      0.0396004      0.1074748
{txt}{space 14}v16 {c |}{col 21}{res}      0.4818871      0.9886430
{txt}{space 14}v17 {c |}{col 21}{res}      0.5497209      0.9748959
{txt}{space 14}v18 {c |}{col 21}{res}      0.2308251      0.1859124
{txt}{space 14}v19 {c |}{col 21}{res}      0.0681702      0.0706948
{txt}{space 14}v20 {c |}{col 21}{res}      0.3148793      1.2270534
{txt}{space 14}v21 {c |}{col 21}{res}      0.2261778      0.1695390
{txt}{space 14}v22 {c |}{col 21}{res}      0.1615924      0.3394076
{txt}{space 14}v23 {c |}{col 21}{res}      1.6590242      2.1588763
{txt}{space 14}v24 {c |}{col 21}{res}      0.5110243      0.4564956
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6927475     -2.0024763
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3368259     -0.8946619
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1699904    -11.4558961
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2908236     -0.7211620
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1192676      0.0134266
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1306164     -0.8490996
{txt}{space 14}v41 {c |}{col 21}{res}     -0.0243204    -42.2964812
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4841356     -2.7975455
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1337821     -1.2348110
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1535065     -1.6578914
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3128928     -0.7191291
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4483164     -1.3578409
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2230745     -2.3414241
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2165857     -4.1763659
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3577761     -1.2605573
{txt}{space 14}v52 {c |}{col 21}{res}      0.4574917      0.3666409
{txt}{space 14}v53 {c |}{col 21}{res}      3.8591328      5.5424212
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014729      0.0104922
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004758      0.0008072
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6815994     -1.6205887
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.22307452
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}84.378446
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57 , lambdan
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0091789     -0.1375178
{txt}{space 15}v3 {c |}{col 21}{res}      0.1025406      0.0920627
{txt}{space 15}v4 {c |}{col 21}{res}      0.0221395      2.2734696
{txt}{space 15}v5 {c |}{col 21}{res}      0.4389195      0.5815785
{txt}{space 15}v6 {c |}{col 21}{res}      0.4471062      0.8510696
{txt}{space 15}v7 {c |}{col 21}{res}      2.1037234      2.4185398
{txt}{space 15}v8 {c |}{col 21}{res}      0.4929477      0.6090276
{txt}{space 15}v9 {c |}{col 21}{res}      0.3702009      0.6824947
{txt}{space 14}v10 {c |}{col 21}{res}      0.0396004      0.1074748
{txt}{space 14}v16 {c |}{col 21}{res}      0.4818871      0.9886430
{txt}{space 14}v17 {c |}{col 21}{res}      0.5497209      0.9748959
{txt}{space 14}v18 {c |}{col 21}{res}      0.2308251      0.1859124
{txt}{space 14}v19 {c |}{col 21}{res}      0.0681702      0.0706948
{txt}{space 14}v20 {c |}{col 21}{res}      0.3148793      1.2270534
{txt}{space 14}v21 {c |}{col 21}{res}      0.2261778      0.1695390
{txt}{space 14}v22 {c |}{col 21}{res}      0.1615924      0.3394076
{txt}{space 14}v23 {c |}{col 21}{res}      1.6590242      2.1588763
{txt}{space 14}v24 {c |}{col 21}{res}      0.5110243      0.4564956
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6927475     -2.0024763
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3368259     -0.8946619
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1699904    -11.4558961
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2908236     -0.7211620
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1192676      0.0134266
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1306164     -0.8490996
{txt}{space 14}v41 {c |}{col 21}{res}     -0.0243204    -42.2964812
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4841356     -2.7975455
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1337821     -1.2348110
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1535065     -1.6578914
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3128928     -0.7191291
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4483164     -1.3578409
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2230745     -2.3414241
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2165857     -4.1763659
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3577761     -1.2605573
{txt}{space 14}v52 {c |}{col 21}{res}      0.4574917      0.3666409
{txt}{space 14}v53 {c |}{col 21}{res}      3.8591328      5.5424212
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014729      0.0104922
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004758      0.0008072
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6815994     -1.6205887
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.22307452
{txt}
{com}. di e(lambda)
{res}.00916958
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0091789     -0.1375178
{txt}{space 15}v3 {c |}{col 21}{res}      0.1025406      0.0920627
{txt}{space 15}v4 {c |}{col 21}{res}      0.0221395      2.2734696
{txt}{space 15}v5 {c |}{col 21}{res}      0.4389195      0.5815785
{txt}{space 15}v6 {c |}{col 21}{res}      0.4471062      0.8510696
{txt}{space 15}v7 {c |}{col 21}{res}      2.1037234      2.4185398
{txt}{space 15}v8 {c |}{col 21}{res}      0.4929477      0.6090276
{txt}{space 15}v9 {c |}{col 21}{res}      0.3702009      0.6824947
{txt}{space 14}v10 {c |}{col 21}{res}      0.0396004      0.1074748
{txt}{space 14}v16 {c |}{col 21}{res}      0.4818871      0.9886430
{txt}{space 14}v17 {c |}{col 21}{res}      0.5497209      0.9748959
{txt}{space 14}v18 {c |}{col 21}{res}      0.2308251      0.1859124
{txt}{space 14}v19 {c |}{col 21}{res}      0.0681702      0.0706948
{txt}{space 14}v20 {c |}{col 21}{res}      0.3148793      1.2270534
{txt}{space 14}v21 {c |}{col 21}{res}      0.2261778      0.1695390
{txt}{space 14}v22 {c |}{col 21}{res}      0.1615924      0.3394076
{txt}{space 14}v23 {c |}{col 21}{res}      1.6590242      2.1588763
{txt}{space 14}v24 {c |}{col 21}{res}      0.5110243      0.4564956
{txt}{space 14}v25 {c |}{col 21}{res}     -0.6927475     -2.0024763
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3368259     -0.8946619
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1699904    -11.4558961
{txt}{space 14}v33 {c |}{col 21}{res}     -0.2908236     -0.7211620
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1192676      0.0134266
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1306164     -0.8490996
{txt}{space 14}v41 {c |}{col 21}{res}     -0.0243204    -42.2964812
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4841356     -2.7975455
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1337821     -1.2348110
{txt}{space 14}v44 {c |}{col 21}{res}     -0.1535065     -1.6578914
{txt}{space 14}v45 {c |}{col 21}{res}     -0.3128928     -0.7191291
{txt}{space 14}v46 {c |}{col 21}{res}     -0.4483164     -1.3578409
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2230745     -2.3414241
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2165857     -4.1763659
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3577761     -1.2605573
{txt}{space 14}v52 {c |}{col 21}{res}      0.4574917      0.3666409
{txt}{space 14}v53 {c |}{col 21}{res}      3.8591328      5.5424212
{txt}{space 14}v56 {c |}{col 21}{res}      0.0014729      0.0104922
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004758      0.0008072
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6815994     -1.6205887
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.22307452
{txt}
{com}. di e(lambda)
{res}42.189223
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. 
. clear all 
{txt}
{com}. 
. cap cd "C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. cap cd "/home/achim/Dropbox/StataLasso/lassoLogit/"
{txt}
{com}.  cap cd "C:\Users\achim\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. adopath + "`c(pwd)'"
{txt}  [1]  (BASE)      "{res}C:\Program Files (x86)\Stata14\ado\base/{txt}"
  [2]  (SITE)      "{res}C:\Program Files (x86)\Stata14\ado\site/{txt}"
  [3]              "{res}.{txt}"
  [4]  (PERSONAL)  "{res}c:\ado\personal/{txt}"
  [5]  (PLUS)      "{res}c:\ado\plus/{txt}"
  [6]  (OLDPLACE)  "{res}c:\ado/{txt}"
  [7]              "{res}C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit{txt}"

{com}. 
. which lassologit
{txt}.\lassologit.ado
{res}*! lassologit (v0.1)
*! last edited: 12apr2019
*! authors: aa/ms
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,nocons
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ -0.0864040297967744 \ 0 \ 0 \ 0.14203538121037 \ 0.0696029895895297 \ 1.5124020295351 \ 0.241304873304514 \ 0.089231885869934 \ 0 \ 0 \ -0.262648802099565 \ 0 \ 0 \ 0.0221381492679238 \ 0.273749502669813 \ 0.32684735941686 \ 0.0176157322393083 \ 0 \ 0.229847624122447 \ 0.0820838755349145 \ 0.0349736719705019 \ 1.27572289568391 \ 0.318345425501668 \ -0.75361780468791 \ -0.371276657650674 \ -0.184069780173229 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.451510644154917 \ 0 \ -0.0468459332646387 \ 0 \ -0.377889219838404 \ 0 \ -0.136072245922347 \ 0 \ 0 \ -0.494978796805398 \ -0.191973864938743 \ -0.274310171697392 \ -0.512607089354212 \ -0.622744742178529 \ -0.227169791356443 \ -0.289531930392509 \ -0.364271673492403 \ -0.979682797504907 \ -0.325414901150868 \ 0.160823428575976 \ 2.80067037980844 \ 0 \ 0 \ 0.00070917591496024 \ 9.75715276693764e-05 )
{txt}
{com}. di mreldif(S,G)
{res}.00020463
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}636659.71
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 , postl
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0911749035363913 \ 0 \ 0.600348234636252 \ 0.848587006358465 \ 2.4474282743846 \ 0.640213550033936 \ 0.72606218429801 \ 0.108244564804095 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.999045440309051 \ 0.990826392555297 \ 0.126234229254353 \ 0.0760883260691006 \ 1.23427664731182 \ 0.163969519238026 \ 0.340943971216137 \ 2.19787084433997 \ 0.517482714211636 \ -1.95041244716883 \ -0.865071034109125 \ -12.3112008896115 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.803106762101585 \ 0 \ 0 \ 0 \ 0.0241819026296822 \ 0 \ -0.826519776504054 \ 0 \ 0 \ -2.79996722215776 \ -1.28167204241549 \ -1.71051269617404 \ -0.730702205605326 \ -1.57125641472336 \ 0 \ -4.53973467862469 \ -1.21039378912067 \ 0 \ 0 \ 0.392453914192812 \ 5.70993167564932 \ 0 \ 0 \ 0.0119032569623226 \ 0.000562741641538757 \ -1.6805612492106 )
{txt}
{com}. di mreldif(S,G)
{res}9.266e-08
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}637415.26
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,postl nocons
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ -0.243870343170744 \ 0 \ 0 \ 0.323758365384805 \ 0.365895137099397 \ 2.14831819350489 \ 0.52796289907392 \ 0.463041759179273 \ 0 \ 0 \ -0.40515745464642 \ 0 \ 0 \ 1.26334873669496 \ 0.794860192566074 \ 0.848935809630871 \ -0.0498307343945656 \ 0 \ 1.33427727401593 \ 0.0455995142062725 \ 0.327362342472093 \ 1.975974600918 \ 0.382498934793842 \ -2.23935890965794 \ -0.974877197129703 \ -9.3264468573156 \ 0 \ 0 \ 0 \ 0 \ 0 \ -1.08698081175868 \ 0 \ -2.15476075561477 \ 0 \ -0.225337578437582 \ 0 \ -0.956767386369015 \ 0 \ 0 \ -3.02443544634889 \ -1.90127824511308 \ -2.30281566974477 \ -1.10179581057555 \ -2.17680028017689 \ -2.63960623014879 \ -4.34961066961778 \ -1.61635289440844 \ -1.04825259598903 \ -1.67651030427761 \ 0.222992581890547 \ 5.18632237505927 \ 0 \ 0 \ 0.00780983251377047 \ 0.000304166775336087 )
{txt}
{com}. di mreldif(S,G)
{res}7.670e-08
{txt}
{com}. di e(lambda)*2*e(total_trials)
{res}636659.71
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  , lambdan
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}.01505525
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,nocons
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ -0.0864040297967744 \ 0 \ 0 \ 0.14203538121037 \ 0.0696029895895297 \ 1.5124020295351 \ 0.241304873304514 \ 0.089231885869934 \ 0 \ 0 \ -0.262648802099565 \ 0 \ 0 \ 0.0221381492679238 \ 0.273749502669813 \ 0.32684735941686 \ 0.0176157322393083 \ 0 \ 0.229847624122447 \ 0.0820838755349145 \ 0.0349736719705019 \ 1.27572289568391 \ 0.318345425501668 \ -0.75361780468791 \ -0.371276657650674 \ -0.184069780173229 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.451510644154917 \ 0 \ -0.0468459332646387 \ 0 \ -0.377889219838404 \ 0 \ -0.136072245922347 \ 0 \ 0 \ -0.494978796805398 \ -0.191973864938743 \ -0.274310171697392 \ -0.512607089354212 \ -0.622744742178529 \ -0.227169791356443 \ -0.289531930392509 \ -0.364271673492403 \ -0.979682797504907 \ -0.325414901150868 \ 0.160823428575976 \ 2.80067037980844 \ 0 \ 0 \ 0.00070917591496024 \ 9.75715276693764e-05 )
{txt}
{com}. di mreldif(S,G)
{res}.00020463
{txt}
{com}. di e(lambda) 
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 , postl
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0911749035363913 \ 0 \ 0.600348234636252 \ 0.848587006358465 \ 2.4474282743846 \ 0.640213550033936 \ 0.72606218429801 \ 0.108244564804095 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.999045440309051 \ 0.990826392555297 \ 0.126234229254353 \ 0.0760883260691006 \ 1.23427664731182 \ 0.163969519238026 \ 0.340943971216137 \ 2.19787084433997 \ 0.517482714211636 \ -1.95041244716883 \ -0.865071034109125 \ -12.3112008896115 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.803106762101585 \ 0 \ 0 \ 0 \ 0.0241819026296822 \ 0 \ -0.826519776504054 \ 0 \ 0 \ -2.79996722215776 \ -1.28167204241549 \ -1.71051269617404 \ -0.730702205605326 \ -1.57125641472336 \ 0 \ -4.53973467862469 \ -1.21039378912067 \ 0 \ 0 \ 0.392453914192812 \ 5.70993167564932 \ 0 \ 0 \ 0.0119032569623226 \ 0.000562741641538757 \ -1.6805612492106 )
{txt}
{com}. di mreldif(S,G)
{res}9.266e-08
{txt}
{com}. di e(lambda) 
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,postl nocons
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ -0.243870343170744 \ 0 \ 0 \ 0.323758365384805 \ 0.365895137099397 \ 2.14831819350489 \ 0.52796289907392 \ 0.463041759179273 \ 0 \ 0 \ -0.40515745464642 \ 0 \ 0 \ 1.26334873669496 \ 0.794860192566074 \ 0.848935809630871 \ -0.0498307343945656 \ 0 \ 1.33427727401593 \ 0.0455995142062725 \ 0.327362342472093 \ 1.975974600918 \ 0.382498934793842 \ -2.23935890965794 \ -0.974877197129703 \ -9.3264468573156 \ 0 \ 0 \ 0 \ 0 \ 0 \ -1.08698081175868 \ 0 \ -2.15476075561477 \ 0 \ -0.225337578437582 \ 0 \ -0.956767386369015 \ 0 \ 0 \ -3.02443544634889 \ -1.90127824511308 \ -2.30281566974477 \ -1.10179581057555 \ -2.17680028017689 \ -2.63960623014879 \ -4.34961066961778 \ -1.61635289440844 \ -1.04825259598903 \ -1.67651030427761 \ 0.222992581890547 \ 5.18632237505927 \ 0 \ 0 \ 0.00780983251377047 \ 0.000304166775336087 )
{txt}
{com}. di mreldif(S,G)
{res}7.670e-08
{txt}
{com}. di e(lambda)
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. 
. clear all 
{txt}
{com}. 
. cap cd "C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. cap cd "/home/achim/Dropbox/StataLasso/lassoLogit/"
{txt}
{com}. cap cd "C:\Users\achim\Dropbox\StataLasso\lassoLogit"
{txt}
{com}. adopath + "`c(pwd)'"
{txt}  [1]  (BASE)      "{res}C:\Program Files (x86)\Stata14\ado\base/{txt}"
  [2]  (SITE)      "{res}C:\Program Files (x86)\Stata14\ado\site/{txt}"
  [3]              "{res}.{txt}"
  [4]  (PERSONAL)  "{res}c:\ado\personal/{txt}"
  [5]  (PLUS)      "{res}c:\ado\plus/{txt}"
  [6]  (OLDPLACE)  "{res}c:\ado/{txt}"
  [7]              "{res}C:\Users\Achim.Ahrens\Dropbox\StataLasso\lassoLogit{txt}"

{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0749266      0.0912021
{txt}{space 15}v5 {c |}{col 21}{res}      0.3596487      0.6051171
{txt}{space 15}v6 {c |}{col 21}{res}      0.3968811      0.8601872
{txt}{space 15}v7 {c |}{col 21}{res}      1.8324478      2.4925591
{txt}{space 15}v8 {c |}{col 21}{res}      0.4097197      0.6151101
{txt}{space 15}v9 {c |}{col 21}{res}      0.2989688      0.7911203
{txt}{space 14}v16 {c |}{col 21}{res}      0.4352628      1.0098055
{txt}{space 14}v17 {c |}{col 21}{res}      0.4123384      1.0017585
{txt}{space 14}v18 {c |}{col 21}{res}      0.1799411      0.1373583
{txt}{space 14}v19 {c |}{col 21}{res}      0.0606173      0.0840006
{txt}{space 14}v20 {c |}{col 21}{res}      0.2312694      1.2761553
{txt}{space 14}v21 {c |}{col 21}{res}      0.2507944      0.1657248
{txt}{space 14}v22 {c |}{col 21}{res}      0.0931573      0.3509021
{txt}{space 14}v23 {c |}{col 21}{res}      1.3765935      2.2160690
{txt}{space 14}v24 {c |}{col 21}{res}      0.4144726      0.5437184
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4271099     -1.8968453
{txt}{space 14}v26 {c |}{col 21}{res}     -0.1956611     -0.9797774
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0735277    -11.9614455
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1072033     -0.8894005
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1321892     -0.0846260
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0080273     -0.8928053
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2521978     -2.7696321
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0172905     -1.7524299
{txt}{space 14}v45 {c |}{col 21}{res}     -0.1889959     -0.7206971
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2115831     -1.5865996
{txt}{space 14}v49 {c |}{col 21}{res}     -0.0386795     -1.1858998
{txt}{space 14}v52 {c |}{col 21}{res}      0.4026746      0.4040957
{txt}{space 14}v53 {c |}{col 21}{res}      3.0779711      5.7620686
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007819      0.0118270
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004207      0.0004501
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6574515     -1.7102200
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.06680107
{txt}
{com}. di e(lambda)
{res}79.207801
{txt}
{com}. assert mreldif(S,G)<0.01
{err}assertion is false
{txt}{search r(9), local:r(9);}

end of do-file

{search r(9), local:r(9);}

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. ************************************************************ 
.  
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  , hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ -0.0864040297967744 \ 0 \ 0 \ 0.14203538121037 \ 0.0696029895895297 \ 1.5124020295351 \ 0.241304873304514 \ 0.089231885869934 \ 0 \ 0 \ -0.262648802099565 \ 0 \ 0 \ 0.0221381492679238 \ 0.273749502669813 \ 0.32684735941686 \ 0.0176157322393083 \ 0 \ 0.229847624122447 \ 0.0820838755349145 \ 0.0349736719705019 \ 1.27572289568391 \ 0.318345425501668 \ -0.75361780468791 \ -0.371276657650674 \ -0.184069780173229 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.451510644154917 \ 0 \ -0.0468459332646387 \ 0 \ -0.377889219838404 \ 0 \ -0.136072245922347 \ 0 \ 0 \ -0.494978796805398 \ -0.191973864938743 \ -0.274310171697392 \ -0.512607089354212 \ -0.622744742178529 \ -0.227169791356443 \ -0.289531930392509 \ -0.364271673492403 \ -0.979682797504907 \ -0.325414901150868 \ 0.160823428575976 \ 2.80067037980844 \ 0 \ 0 \ 0.00070917591496024 \ 9.75715276693764e-05 )
{txt}
{com}. di mreldif(S,G)
{res}.00020463
{txt}
{com}. di e(lambda) 
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 , postl hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0911749035363913 \ 0 \ 0.600348234636252 \ 0.848587006358465 \ 2.4474282743846 \ 0.640213550033936 \ 0.72606218429801 \ 0.108244564804095 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.999045440309051 \ 0.990826392555297 \ 0.126234229254353 \ 0.0760883260691006 \ 1.23427664731182 \ 0.163969519238026 \ 0.340943971216137 \ 2.19787084433997 \ 0.517482714211636 \ -1.95041244716883 \ -0.865071034109125 \ -12.3112008896115 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.803106762101585 \ 0 \ 0 \ 0 \ 0.0241819026296822 \ 0 \ -0.826519776504054 \ 0 \ 0 \ -2.79996722215776 \ -1.28167204241549 \ -1.71051269617404 \ -0.730702205605326 \ -1.57125641472336 \ 0 \ -4.53973467862469 \ -1.21039378912067 \ 0 \ 0 \ 0.392453914192812 \ 5.70993167564932 \ 0 \ 0 \ 0.0119032569623226 \ 0.000562741641538757 \ -1.6805612492106 )
{txt}
{com}. di mreldif(S,G)
{res}9.266e-08
{txt}
{com}. di e(lambda) 
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,postl nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ -0.243870343170744 \ 0 \ 0 \ 0.323758365384805 \ 0.365895137099397 \ 2.14831819350489 \ 0.52796289907392 \ 0.463041759179273 \ 0 \ 0 \ -0.40515745464642 \ 0 \ 0 \ 1.26334873669496 \ 0.794860192566074 \ 0.848935809630871 \ -0.0498307343945656 \ 0 \ 1.33427727401593 \ 0.0455995142062725 \ 0.327362342472093 \ 1.975974600918 \ 0.382498934793842 \ -2.23935890965794 \ -0.974877197129703 \ -9.3264468573156 \ 0 \ 0 \ 0 \ 0 \ 0 \ -1.08698081175868 \ 0 \ -2.15476075561477 \ 0 \ -0.225337578437582 \ 0 \ -0.956767386369015 \ 0 \ 0 \ -3.02443544634889 \ -1.90127824511308 \ -2.30281566974477 \ -1.10179581057555 \ -2.17680028017689 \ -2.63960623014879 \ -4.34961066961778 \ -1.61635289440844 \ -1.04825259598903 \ -1.67651030427761 \ 0.222992581890547 \ 5.18632237505927 \ 0 \ 0 \ 0.00780983251377047 \ 0.000304166775336087 )
{txt}
{com}. di mreldif(S,G)
{res}7.670e-08
{txt}
{com}. di e(lambda)
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD0c000000.tmp"
{txt}
{com}. clear all 
{txt}
{com}. 
. 
. 
. *************************************************************** 
. *** verifying against "hdm" package in R (Spindler et al.)      ***
. *** hdmlambda option ensures same lambda is used                        ***
. ***************************************************************
. 
. 
. insheet using "spam.data", clear delim(" ")
{txt}(58 vars, 4,601 obs)

{com}. 
. rlassologit v58 v1-v57  , hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0818948712695488 \ 0 \ 0.379429361719609 \ 0.409109085956748 \ 1.9003258692222 \ 0.431150805857511 \ 0.315744217129519 \ 0.0049820928287534 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.447978507142549 \ 0.443934277021981 \ 0.192865405720127 \ 0.0625091762029476 \ 0.248557045294218 \ 0.245131827365983 \ 0.109668219678555 \ 1.43731652314774 \ 0.440704475266581 \ -0.480122280718989 \ -0.223595359843765 \ -0.0875263945521702 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.14385510842836 \ 0 \ 0 \ 0 \ -0.134425982189653 \ 0 \ -0.0324979517942505 \ 0 \ 0 \ -0.299792597221532 \ -0.0178914234516845 \ -0.0405270661669486 \ -0.215984667465846 \ -0.256364202865828 \ 0 \ -0.00501707194224279 \ -0.113031184465464 \ 0 \ 0 \ 0.418975832790503 \ 3.25756538129954 \ 0 \ 0 \ 0.000923864682472632 \ 0.000432834090656421 \ -1.66933973402153 )
{txt}
{com}. di mreldif(S,G)
{res}.00055544
{txt}
{com}. di e(lambda)
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta)'
{txt}
{com}. mat G = ( 0 \ -0.0864040297967744 \ 0 \ 0 \ 0.14203538121037 \ 0.0696029895895297 \ 1.5124020295351 \ 0.241304873304514 \ 0.089231885869934 \ 0 \ 0 \ -0.262648802099565 \ 0 \ 0 \ 0.0221381492679238 \ 0.273749502669813 \ 0.32684735941686 \ 0.0176157322393083 \ 0 \ 0.229847624122447 \ 0.0820838755349145 \ 0.0349736719705019 \ 1.27572289568391 \ 0.318345425501668 \ -0.75361780468791 \ -0.371276657650674 \ -0.184069780173229 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.451510644154917 \ 0 \ -0.0468459332646387 \ 0 \ -0.377889219838404 \ 0 \ -0.136072245922347 \ 0 \ 0 \ -0.494978796805398 \ -0.191973864938743 \ -0.274310171697392 \ -0.512607089354212 \ -0.622744742178529 \ -0.227169791356443 \ -0.289531930392509 \ -0.364271673492403 \ -0.979682797504907 \ -0.325414901150868 \ 0.160823428575976 \ 2.80067037980844 \ 0 \ 0 \ 0.00070917591496024 \ 9.75715276693764e-05 )
{txt}
{com}. di mreldif(S,G)
{res}.00020463
{txt}
{com}. di e(lambda) 
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 , postl hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v3 {c |}{col 21}{res}      0.0818368      0.0911749
{txt}{space 15}v5 {c |}{col 21}{res}      0.3792664      0.6003482
{txt}{space 15}v6 {c |}{col 21}{res}      0.4090015      0.8485870
{txt}{space 15}v7 {c |}{col 21}{res}      1.8997413      2.4474283
{txt}{space 15}v8 {c |}{col 21}{res}      0.4309734      0.6402136
{txt}{space 15}v9 {c |}{col 21}{res}      0.3156239      0.7260621
{txt}{space 14}v10 {c |}{col 21}{res}      0.0048763      0.1082446
{txt}{space 14}v16 {c |}{col 21}{res}      0.4478750      0.9990454
{txt}{space 14}v17 {c |}{col 21}{res}      0.4436761      0.9908264
{txt}{space 14}v18 {c |}{col 21}{res}      0.1927575      0.1262342
{txt}{space 14}v19 {c |}{col 21}{res}      0.0624956      0.0760883
{txt}{space 14}v20 {c |}{col 21}{res}      0.2483980      1.2342767
{txt}{space 14}v21 {c |}{col 21}{res}      0.2451824      0.1639695
{txt}{space 14}v22 {c |}{col 21}{res}      0.1095403      0.3409440
{txt}{space 14}v23 {c |}{col 21}{res}      1.4367754      2.1978709
{txt}{space 14}v24 {c |}{col 21}{res}      0.4404862      0.5174827
{txt}{space 14}v25 {c |}{col 21}{res}     -0.4796520     -1.9504124
{txt}{space 14}v26 {c |}{col 21}{res}     -0.2233588     -0.8650710
{txt}{space 14}v27 {c |}{col 21}{res}     -0.0873983    -12.3111997
{txt}{space 14}v33 {c |}{col 21}{res}     -0.1435278     -0.8031068
{txt}{space 14}v37 {c |}{col 21}{res}     -0.1344359      0.0241819
{txt}{space 14}v39 {c |}{col 21}{res}     -0.0322820     -0.8265198
{txt}{space 14}v42 {c |}{col 21}{res}     -0.2993749     -2.7999670
{txt}{space 14}v43 {c |}{col 21}{res}     -0.0176102     -1.2816720
{txt}{space 14}v44 {c |}{col 21}{res}     -0.0403139     -1.7105127
{txt}{space 14}v45 {c |}{col 21}{res}     -0.2157528     -0.7307022
{txt}{space 14}v46 {c |}{col 21}{res}     -0.2559548     -1.5712564
{txt}{space 14}v48 {c |}{col 21}{res}     -0.0046234     -4.5397346
{txt}{space 14}v49 {c |}{col 21}{res}     -0.1124130     -1.2103938
{txt}{space 14}v52 {c |}{col 21}{res}      0.4188453      0.3924539
{txt}{space 14}v53 {c |}{col 21}{res}      3.2560117      5.7099315
{txt}{space 14}v56 {c |}{col 21}{res}      0.0009226      0.0119033
{txt}{space 14}v57 {c |}{col 21}{res}      0.0004327      0.0005627
{txt}{space 12}_cons {c |}{col 21}{res}     -1.6692523     -1.6805612
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ 0 \ 0.0911749035363913 \ 0 \ 0.600348234636252 \ 0.848587006358465 \ 2.4474282743846 \ 0.640213550033936 \ 0.72606218429801 \ 0.108244564804095 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0.999045440309051 \ 0.990826392555297 \ 0.126234229254353 \ 0.0760883260691006 \ 1.23427664731182 \ 0.163969519238026 \ 0.340943971216137 \ 2.19787084433997 \ 0.517482714211636 \ -1.95041244716883 \ -0.865071034109125 \ -12.3112008896115 \ 0 \ 0 \ 0 \ 0 \ 0 \ -0.803106762101585 \ 0 \ 0 \ 0 \ 0.0241819026296822 \ 0 \ -0.826519776504054 \ 0 \ 0 \ -2.79996722215776 \ -1.28167204241549 \ -1.71051269617404 \ -0.730702205605326 \ -1.57125641472336 \ 0 \ -4.53973467862469 \ -1.21039378912067 \ 0 \ 0 \ 0.392453914192812 \ 5.70993167564932 \ 0 \ 0 \ 0.0119032569623226 \ 0.000562741641538757 \ -1.6805612492106 )
{txt}
{com}. di mreldif(S,G)
{res}9.266e-08
{txt}
{com}. di e(lambda) 
{res}69.269209
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
. rlassologit v58 v1-v57 ,postl nocons hdmlambda
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}       Logistic       Post
{col 10}         {c |}       Lasso          logit
{hline 18}{c +}{hline 32}
{space 15}v2 {c |}{col 21}{res}     -0.0864021     -0.2438703
{txt}{space 15}v5 {c |}{col 21}{res}      0.1420729      0.3237584
{txt}{space 15}v6 {c |}{col 21}{res}      0.0696147      0.3658951
{txt}{space 15}v7 {c |}{col 21}{res}      1.5124094      2.1483182
{txt}{space 15}v8 {c |}{col 21}{res}      0.2413068      0.5279629
{txt}{space 15}v9 {c |}{col 21}{res}      0.0892406      0.4630417
{txt}{space 14}v12 {c |}{col 21}{res}     -0.2626754     -0.4051575
{txt}{space 14}v15 {c |}{col 21}{res}      0.0219290      1.2633487
{txt}{space 14}v16 {c |}{col 21}{res}      0.2736968      0.7948602
{txt}{space 14}v17 {c |}{col 21}{res}      0.3267519      0.8489358
{txt}{space 14}v18 {c |}{col 21}{res}      0.0176134     -0.0498307
{txt}{space 14}v20 {c |}{col 21}{res}      0.2297984      1.3342773
{txt}{space 14}v21 {c |}{col 21}{res}      0.0820892      0.0455995
{txt}{space 14}v22 {c |}{col 21}{res}      0.0349657      0.3273623
{txt}{space 14}v23 {c |}{col 21}{res}      1.2756734      1.9759747
{txt}{space 14}v24 {c |}{col 21}{res}      0.3183246      0.3824989
{txt}{space 14}v25 {c |}{col 21}{res}     -0.7536021     -2.2393589
{txt}{space 14}v26 {c |}{col 21}{res}     -0.3712635     -0.9748771
{txt}{space 14}v27 {c |}{col 21}{res}     -0.1840658     -9.3264461
{txt}{space 14}v33 {c |}{col 21}{res}     -0.4515223     -1.0869808
{txt}{space 14}v35 {c |}{col 21}{res}     -0.0468163     -2.1547606
{txt}{space 14}v37 {c |}{col 21}{res}     -0.3779250     -0.2253376
{txt}{space 14}v39 {c |}{col 21}{res}     -0.1360625     -0.9567674
{txt}{space 14}v42 {c |}{col 21}{res}     -0.4949375     -3.0244352
{txt}{space 14}v43 {c |}{col 21}{res}     -0.1919772     -1.9012782
{txt}{space 14}v44 {c |}{col 21}{res}     -0.2743111     -2.3028157
{txt}{space 14}v45 {c |}{col 21}{res}     -0.5126451     -1.1017958
{txt}{space 14}v46 {c |}{col 21}{res}     -0.6227560     -2.1768003
{txt}{space 14}v47 {c |}{col 21}{res}     -0.2272200     -2.6396062
{txt}{space 14}v48 {c |}{col 21}{res}     -0.2895492     -4.3496106
{txt}{space 14}v49 {c |}{col 21}{res}     -0.3642791     -1.6163529
{txt}{space 14}v50 {c |}{col 21}{res}     -0.9797083     -1.0482526
{txt}{space 14}v51 {c |}{col 21}{res}     -0.3254104     -1.6765103
{txt}{space 14}v52 {c |}{col 21}{res}      0.1608367      0.2229926
{txt}{space 14}v53 {c |}{col 21}{res}      2.8008370      5.1863222
{txt}{space 14}v56 {c |}{col 21}{res}      0.0007093      0.0078098
{txt}{space 14}v57 {c |}{col 21}{res}      0.0000976      0.0003042
{txt}{hline 18}{c BT}{hline 32}

{com}. mat S = e(beta_post)'
{txt}
{com}. mat G = ( 0 \ -0.243870343170744 \ 0 \ 0 \ 0.323758365384805 \ 0.365895137099397 \ 2.14831819350489 \ 0.52796289907392 \ 0.463041759179273 \ 0 \ 0 \ -0.40515745464642 \ 0 \ 0 \ 1.26334873669496 \ 0.794860192566074 \ 0.848935809630871 \ -0.0498307343945656 \ 0 \ 1.33427727401593 \ 0.0455995142062725 \ 0.327362342472093 \ 1.975974600918 \ 0.382498934793842 \ -2.23935890965794 \ -0.974877197129703 \ -9.3264468573156 \ 0 \ 0 \ 0 \ 0 \ 0 \ -1.08698081175868 \ 0 \ -2.15476075561477 \ 0 \ -0.225337578437582 \ 0 \ -0.956767386369015 \ 0 \ 0 \ -3.02443544634889 \ -1.90127824511308 \ -2.30281566974477 \ -1.10179581057555 \ -2.17680028017689 \ -2.63960623014879 \ -4.34961066961778 \ -1.61635289440844 \ -1.04825259598903 \ -1.67651030427761 \ 0.222992581890547 \ 5.18632237505927 \ 0 \ 0 \ 0.00780983251377047 \ 0.000304166775336087 )
{txt}
{com}. di mreldif(S,G)
{res}7.670e-08
{txt}
{com}. di e(lambda)
{res}69.187102
{txt}
{com}. assert mreldif(S,G)<0.01
{txt}
{com}. 
{txt}end of do-file

{com}. exit, clear
